<UserControl x:Class="MultiFunPlayer.MediaSource.Views.InternalMediaSource"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:behaviours="clr-namespace:MultiFunPlayer.UI.Behaviours"
             xmlns:converters="clr-namespace:MultiFunPlayer.UI.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:s="https://github.com/canton7/Stylet"
             d:DesignHeight="450"
             d:DesignWidth="800"
             x:ClassModifier="internal"
             mc:Ignorable="d">
    <UserControl.Resources>
        <converters:MultiObjectEqualToBooleanConverter x:Key="MultiObjectEqualToBooleanConverter"/>
        <converters:ItemIndexInContainerConverter x:Key="ItemIndexInContainerConverter"/>
    </UserControl.Resources>
    <Expander Style="{StaticResource MaterialDesignToolBarExpander}"
              material:ExpanderAssist.HorizontalHeaderPadding="0 0 6 0"
              Background="{DynamicResource MaterialDesignToolBarBackground}"
              IsExpanded="{Binding DataContext.ContentVisible, RelativeSource={RelativeSource FindAncestor, AncestorLevel=2, AncestorType={x:Type UserControl}}}">
        <Expander.Header>
            <DockPanel Height="36" LastChildFill="True">
                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                    <Button Style="{StaticResource MaterialDesignProgressToolBarButton}"
                            Command="{s:Action RefreshPlaylist}"
                            IsEnabled="{Binding CanRefreshPlaylist}"
                            ToolTip="Refresh playlist">
                        <material:PackIcon Width="19"
                                           Height="19"
                                           Kind="Refresh"/>
                    </Button>

                    <Button Style="{StaticResource MaterialDesignProgressToolBarButton}"
                            Command="{s:Action CleanupPlaylist}"
                            IsEnabled="{Binding CanCleanupPlaylist}"
                            ToolTip="Remove missing items">
                        <material:PackIcon Width="19"
                                           Height="19"
                                           Kind="Broom"/>
                    </Button>

                    <Button Style="{StaticResource MaterialDesignProgressToolBarButton}"
                            Command="{s:Action ClearPlaylist}"
                            IsEnabled="{Binding CanClearPlaylist}"
                            ToolTip="Clear playlist">
                        <material:PackIcon Width="19"
                                           Height="19"
                                           Kind="Close"/>
                    </Button>
                </StackPanel>

                <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                    <Button s:View.ActionTarget="{Binding DataContext.Parent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                            material:ButtonProgressAssist.IsIndeterminate="True"
                            material:ButtonProgressAssist.IsIndicatorVisible="{Binding IsConnectBusy}"
                            material:ButtonProgressAssist.Value="-1"
                            Command="{s:Action ToggleConnectAsync}"
                            CommandParameter="{Binding}"
                            IsEnabled="{Binding CanToggleConnect}">
                        <Button.Style>
                            <Style BasedOn="{StaticResource MaterialDesignProgressToolBarButton}" TargetType="{x:Type ButtonBase}">
                                <Setter Property="ToolTip" Value="Connect"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                        <Setter Property="ToolTip" Value="Disconnect"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <material:PackIcon Width="19" Height="19">
                            <material:PackIcon.Style>
                                <Style BasedOn="{StaticResource {x:Type material:PackIcon}}" TargetType="material:PackIcon">
                                    <Setter Property="Kind" Value="Play"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                            <Setter Property="Kind" Value="Stop"/>
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                         From="0"
                                                                         To="1"
                                                                         Duration="0:0:0.8"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </material:PackIcon.Style>
                        </material:PackIcon>
                    </Button>

                    <ToggleButton Style="{StaticResource MaterialDesignToolBarToggleButton}"
                                  IsChecked="{Binding AutoConnectEnabled}"
                                  ToolTip="Auto-connect">
                        <material:PackIcon Width="20"
                                           Height="20"
                                           Kind="MotionPlayOutline"
                                           Opacity=".56"/>
                        <material:ToggleButtonAssist.OnContent>
                            <material:PackIcon Width="20"
                                               Height="20"
                                               Kind="MotionPlayOutline"/>
                        </material:ToggleButtonAssist.OnContent>
                    </ToggleButton>

                    <ToggleButton Style="{StaticResource MaterialDesignToolBarToggleButton}"
                                  IsChecked="{Binding LoadAdditionalScripts}"
                                  ToolTip="Load additional scripts">
                        <material:PackIcon Width="18"
                                           Height="18"
                                           Kind="FileMultipleOutline"
                                           Opacity=".56"/>
                        <material:ToggleButtonAssist.OnContent>
                            <material:PackIcon Width="18"
                                               Height="18"
                                               Kind="FileMultipleOutline"/>
                        </material:ToggleButtonAssist.OnContent>
                    </ToggleButton>

                    <ToggleButton Style="{StaticResource MaterialDesignToolBarToggleButton}"
                                  IsChecked="{Binding IsLooping}"
                                  ToolTip="Loop">
                        <material:PackIcon Width="20"
                                           Height="20"
                                           Kind="Refresh"
                                           Opacity=".56"/>
                        <material:ToggleButtonAssist.OnContent>
                            <material:PackIcon Width="20"
                                               Height="20"
                                               Kind="Refresh"/>
                        </material:ToggleButtonAssist.OnContent>
                    </ToggleButton>

                    <ToggleButton Style="{StaticResource MaterialDesignToolBarToggleButton}"
                                  IsChecked="{Binding IsShuffling}"
                                  ToolTip="Shuffle">
                        <material:PackIcon Width="20"
                                           Height="20"
                                           Kind="ShuffleVariant"
                                           Opacity=".56"/>
                        <material:ToggleButtonAssist.OnContent>
                            <material:PackIcon Width="20"
                                               Height="20"
                                               Kind="ShuffleVariant"/>
                        </material:ToggleButtonAssist.OnContent>
                    </ToggleButton>

                    <Button Style="{StaticResource MaterialDesignProgressToolBarButton}"
                            Command="{s:Action PlayPrevious}"
                            IsEnabled="{Binding CanPlayPrevious}"
                            ToolTip="Prev">
                        <material:PackIcon Width="19"
                                           Height="19"
                                           Kind="SkipPrevious"/>
                    </Button>

                    <Button Style="{StaticResource MaterialDesignProgressToolBarButton}"
                            Command="{s:Action PlayNext}"
                            IsEnabled="{Binding CanPlayNext}"
                            ToolTip="Next">
                        <material:PackIcon Width="19"
                                           Height="19"
                                           Kind="SkipNext"/>
                    </Button>
                </StackPanel>
            </DockPanel>
        </Expander.Header>

        <StackPanel MaxHeight="240"
                    AllowDrop="True"
                    Background="Transparent"
                    Drop="{s:Action OnDrop}"
                    PreviewDragEnter="{s:Action OnPreviewDragOver}"
                    PreviewDragOver="{s:Action OnPreviewDragOver}"
                    Visibility="{Binding IsConnected, Converter={StaticResource BooleanToVisibilityConverter}}">
            <StackPanel Margin="12 10 0 5"
                        Orientation="Horizontal"
                        Visibility="{Binding ScriptPlaylist, Converter={StaticResource NullVisibilityConverter}}">
                <TextBlock Margin="0 0 15 0"
                           VerticalAlignment="Center"
                           FontSize="14"
                           FontWeight="Bold"
                           Text="Playlist"
                           Typography.Capitals="AllSmallCaps"/>

                <material:Badged VerticalAlignment="Center"
                                 behaviours:BadgedAssist.AutoSizeToBadgeContent="True"
                                 Badge="{Binding PlaylistIndex, Converter={StaticResource MathAddConverter}, ConverterParameter=1}"
                                 BadgeColorZoneMode="Dark"
                                 BadgePlacementMode="Bottom"/>

                <TextBlock Margin="3 0 3 0"
                           VerticalAlignment="Center"
                           FontSize="14"
                           FontWeight="Bold"
                           Text="/"/>

                <material:Badged VerticalAlignment="Center"
                                 behaviours:BadgedAssist.AutoSizeToBadgeContent="True"
                                 Badge="{Binding ScriptPlaylist.Count}"
                                 BadgeColorZoneMode="Dark"
                                 BadgePlacementMode="Bottom"/>
            </StackPanel>

            <ContentControl>
                <ContentControl.Resources>
                    <Style TargetType="{x:Type ContentControl}">
                        <Style.Setters>
                            <Setter Property="Content">
                                <Setter.Value>
                                    <Border Height="80"
                                            Margin="15 15 15 15"
                                            BorderThickness="1">
                                        <Border.BorderBrush>
                                            <DrawingBrush TileMode="Tile"
                                                          Viewport="0 0 8 8"
                                                          ViewportUnits="Absolute">
                                                <DrawingBrush.Drawing>
                                                    <DrawingGroup>
                                                        <GeometryDrawing Brush="LightGray">
                                                            <GeometryDrawing.Geometry>
                                                                <GeometryGroup>
                                                                    <RectangleGeometry Rect="0 0 50 50"/>
                                                                    <RectangleGeometry Rect="50 50 50 50"/>
                                                                </GeometryGroup>
                                                            </GeometryDrawing.Geometry>
                                                        </GeometryDrawing>
                                                    </DrawingGroup>
                                                </DrawingBrush.Drawing>
                                            </DrawingBrush>
                                        </Border.BorderBrush>

                                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <material:PackIcon Width="40"
                                                               Height="40"
                                                               HorizontalAlignment="Center"
                                                               Foreground="LightGray"
                                                               Kind="InboxArrowDown"/>
                                            <TextBlock Foreground="LightGray"
                                                       Text="Drop scripts here"
                                                       Typography.Capitals="AllSmallCaps"/>
                                        </StackPanel>
                                    </Border>
                                </Setter.Value>
                            </Setter>
                        </Style.Setters>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ScriptPlaylist.Count, Converter={StaticResource NotZeroConverter}}" Value="True">
                                <DataTrigger.Setters>
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <ItemsControl ItemsSource="{Binding ScriptPlaylist}"
                                                          MaxHeight="200"
                                                          Margin="0"
                                                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                          VirtualizingStackPanel.IsVirtualizing="True"
                                                          VirtualizingStackPanel.VirtualizationMode="Standard">
                                                <ItemsControl.Template>
                                                    <ControlTemplate TargetType="ItemsControl">
                                                        <ScrollViewer CanContentScroll="True" Focusable="False">
                                                            <ItemsPresenter/>
                                                        </ScrollViewer>
                                                    </ControlTemplate>
                                                </ItemsControl.Template>
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Standard"/>
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>

                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Button x:Name="Button"
                                                                Margin="8 3 8 0"
                                                                HorizontalAlignment="Stretch"
                                                                HorizontalContentAlignment="Stretch"
                                                                VerticalContentAlignment="Center"
                                                                material:RippleAssist.Feedback="{DynamicResource PrimaryHueMidBrush}"
                                                                Background="{DynamicResource MaterialDesignCardBackground}"
                                                                Click="{s:Action OnPlayScript}"
                                                                Foreground="{DynamicResource MaterialDesignBody}">
                                                            <Button.Style>
                                                                <Style TargetType="{x:Type ButtonBase}">
                                                                    <Setter Property="Cursor" Value="Hand"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                                                <material:Card x:Name="Container"
                                                                                               Background="{TemplateBinding Background}"
                                                                                               Foreground="{TemplateBinding Foreground}">
                                                                                    <Grid>
                                                                                        <material:Ripple Padding="0"
                                                                                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                         Content="{TemplateBinding Content}"
                                                                                                         ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                         ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                         Focusable="False"
                                                                                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                                            <material:Ripple.Clip>
                                                                                                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                                                                                    <Binding ElementName="Container" Path="ActualWidth"/>
                                                                                                    <Binding ElementName="Container" Path="ActualHeight"/>
                                                                                                    <Binding ElementName="Container" Path="UniformCornerRadius"/>
                                                                                                    <Binding ElementName="Container" Path="BorderThickness"/>
                                                                                                </MultiBinding>
                                                                                            </material:Ripple.Clip>
                                                                                        </material:Ripple>
                                                                                    </Grid>
                                                                                </material:Card>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Button.Style>

                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Grid.Column="0"
                                                                           Margin="5 0 5 0"
                                                                           VerticalAlignment="Center"
                                                                           FontSize="9"
                                                                           FontWeight="Medium"
                                                                           Text="{Binding StringFormat={}#{0}, RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}, AncestorLevel=3}, Converter={StaticResource ItemIndexInContainerConverter}, ConverterParameter=1}"/>

                                                                <TextBlock Grid.Column="1"
                                                                           Margin="5 3 5 3"
                                                                           VerticalAlignment="Center"
                                                                           FontWeight="Medium"
                                                                           Text="{Binding Name}"/>

                                                                <Button Grid.Column="2"
                                                                        Style="{StaticResource MaterialDesignPaperButton}"
                                                                        Width="18"
                                                                        Height="18"
                                                                        Margin="0 0 3 0"
                                                                        Padding="0"
                                                                        material:RippleAssist.Feedback="{DynamicResource MaterialDesignLightErrorBrush}"
                                                                        Background="{DynamicResource MaterialDesignCardBackground}"
                                                                        BorderBrush="{DynamicResource MaterialDesignLightErrorBrush}"
                                                                        Click="{s:Action OnRemoveItem}"
                                                                        Foreground="{DynamicResource MaterialDesignErrorBrush}"
                                                                        ToolTip="Remove from playlist">
                                                                    <material:PackIcon Width="16"
                                                                                       Height="16"
                                                                                       Kind="TrashCanOutline"/>
                                                                </Button>
                                                            </Grid>
                                                        </Button>

                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding Exists}" Value="False">
                                                                <DataTrigger.Setters>
                                                                    <Setter TargetName="Button" Property="Opacity" Value="0.35"/>
                                                                    <Setter TargetName="Button" Property="Foreground" Value="{DynamicResource MaterialDesignErrorBrush}"/>
                                                                    <Setter TargetName="Button" Property="material:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignErrorBrush}"/>
                                                                    <Setter TargetName="Button" Property="material:ShadowAssist.ShadowDepth" Value="Depth0"/>
                                                                </DataTrigger.Setters>
                                                            </DataTrigger>

                                                            <DataTrigger Value="True">
                                                                <DataTrigger.Binding>
                                                                    <MultiBinding Converter="{StaticResource MultiObjectEqualToBooleanConverter}">
                                                                        <MultiBinding.Bindings>
                                                                            <Binding Converter="{StaticResource ItemIndexInContainerConverter}" RelativeSource="{RelativeSource Self}"/>
                                                                            <Binding Converter="{StaticResource MathAddConverter}"
                                                                                     ConverterParameter="-1"
                                                                                     Path="DataContext.ScriptPlaylist.Count"
                                                                                     RelativeSource="{RelativeSource FindAncestor,
                                                                                                                     AncestorType={x:Type UserControl}}"/>
                                                                        </MultiBinding.Bindings>
                                                                    </MultiBinding>
                                                                </DataTrigger.Binding>

                                                                <DataTrigger.Setters>
                                                                    <Setter TargetName="Button" Property="Margin" Value="8 3 8 8"/>
                                                                </DataTrigger.Setters>
                                                            </DataTrigger>

                                                            <DataTrigger Value="True">
                                                                <DataTrigger.Binding>
                                                                    <MultiBinding Converter="{StaticResource MultiObjectEqualToBooleanConverter}">
                                                                        <MultiBinding.Bindings>
                                                                            <Binding Converter="{StaticResource ItemIndexInContainerConverter}" RelativeSource="{RelativeSource Self}"/>
                                                                            <Binding Path="DataContext.PlaylistIndex" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}"/>
                                                                        </MultiBinding.Bindings>
                                                                    </MultiBinding>
                                                                </DataTrigger.Binding>

                                                                <DataTrigger.Setters>
                                                                    <Setter TargetName="Button" Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                                                    <Setter TargetName="Button" Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                                                    <Setter TargetName="Button" Property="material:RippleAssist.Feedback" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                                                </DataTrigger.Setters>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger.Setters>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Resources>
            </ContentControl>
        </StackPanel>
    </Expander>
</UserControl>
