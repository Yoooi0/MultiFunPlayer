<UserControl x:Class="MultiFunPlayer.MediaSource.Views.InternalMediaSourceView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:s="https://github.com/canton7/Stylet"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:MultiFunPlayer.UI.Converters"
             xmlns:behaviours="clr-namespace:MultiFunPlayer.UI.Behaviours"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             x:ClassModifier="internal">
    <UserControl.Resources>
        <converters:MultiObjectEqualToBooleanConverter x:Key="MultiObjectEqualToBooleanConverter"/>
        <converters:ItemIndexInContainerConverter x:Key="ItemIndexInContainerConverter"/>
    </UserControl.Resources>
    <Expander material:ExpanderAssist.HorizontalHeaderPadding="0 0 6 0"
              Style="{StaticResource MaterialDesignToolBarExpander}"
              Background="{DynamicResource MaterialDesignToolBarBackground}"
              IsExpanded="{Binding DataContext.ContentVisible, RelativeSource={RelativeSource FindAncestor, AncestorLevel=2, AncestorType={x:Type UserControl}}}">
        <Expander.Header>
            <StackPanel Orientation="Horizontal"
                        Height="36">
                <Button DockPanel.Dock="Left"
                        Command="{s:Action ToggleConnectAsync}"
                        CommandParameter="{Binding}"
                        s:View.ActionTarget="{Binding DataContext.Parent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                        IsEnabled="{Binding CanToggleConnect}"
                        material:ButtonProgressAssist.IsIndicatorVisible="{Binding IsConnectBusy}"
                        material:ButtonProgressAssist.Value="-1"
                        material:ButtonProgressAssist.IsIndeterminate="True">
                    <Button.Style>
                        <Style TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource MaterialDesignProgressToolBarButton}">
                            <Setter Property="ToolTip" Value="Connect" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                    <Setter Property="ToolTip" Value="Disconnect" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <material:PackIcon Width="19" Height="19">
                        <material:PackIcon.Style>
                            <Style TargetType="material:PackIcon" BasedOn="{StaticResource {x:Type material:PackIcon}}">
                                <Setter Property="Kind" Value="Play" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                        <Setter Property="Kind" Value="Stop" />
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.8" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </material:PackIcon.Style>
                    </material:PackIcon>
                </Button>

                <ToggleButton DockPanel.Dock="Left"
                              IsChecked="{Binding AutoConnectEnabled}"           
                              Style="{StaticResource MaterialDesignToolBarToggleButton}"
                              ToolTip="Auto-connect">
                    <material:PackIcon Kind="MotionPlayOutline" Opacity=".56" Width="20" Height="20"/>
                    <material:ToggleButtonAssist.OnContent>
                        <material:PackIcon Kind="MotionPlayOutline" Width="20" Height="20"/>
                    </material:ToggleButtonAssist.OnContent>
                </ToggleButton>

                <ToggleButton DockPanel.Dock="Left"
                              IsChecked="{Binding IsLooping}"           
                              Style="{StaticResource MaterialDesignToolBarToggleButton}"
                              ToolTip="Loop">
                    <material:PackIcon Kind="Refresh" Opacity=".56" Width="20" Height="20"/>
                    <material:ToggleButtonAssist.OnContent>
                        <material:PackIcon Kind="Refresh" Width="20" Height="20"/>
                    </material:ToggleButtonAssist.OnContent>
                </ToggleButton>

                <ToggleButton DockPanel.Dock="Left"
                              IsChecked="{Binding IsShuffling}"           
                              Style="{StaticResource MaterialDesignToolBarToggleButton}"
                              ToolTip="Shuffle">
                    <material:PackIcon Kind="ShuffleVariant" Opacity=".56" Width="20" Height="20"/>
                    <material:ToggleButtonAssist.OnContent>
                        <material:PackIcon Kind="ShuffleVariant" Width="20" Height="20"/>
                    </material:ToggleButtonAssist.OnContent>
                </ToggleButton>

                <Button DockPanel.Dock="Left"
                        Command="{s:Action PlayPrevious}"
                        IsEnabled="{Binding CanPlayPrevious}"
                        Style="{StaticResource MaterialDesignProgressToolBarButton}"
                        ToolTip="Prev">
                    <material:PackIcon Width="19" Height="19" Kind="SkipPrevious"/>
                </Button>

                <Button DockPanel.Dock="Left"
                        Command="{s:Action PlayNext}"
                        IsEnabled="{Binding CanPlayNext}"
                        Style="{StaticResource MaterialDesignProgressToolBarButton}"
                        ToolTip="Next">
                    <material:PackIcon Width="19" Height="19" Kind="SkipNext"/>
                </Button>

                <Button DockPanel.Dock="Left"
                        Command="{s:Action ClearPlaylist}"
                        IsEnabled="{Binding CanClearPlaylist}"
                        Style="{StaticResource MaterialDesignProgressToolBarButton}"
                        ToolTip="Clear playlist">
                    <material:PackIcon Width="19" Height="19" Kind="Close"/>
                </Button>
            </StackPanel>
        </Expander.Header>

        <StackPanel Visibility="{Binding IsConnected, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Background="Transparent"
                    AllowDrop="True"
                    Drop="{s:Action OnDrop}"
                    PreviewDragEnter="{s:Action OnPreviewDragOver}"
                    PreviewDragOver="{s:Action OnPreviewDragOver}"
                    MaxHeight="240">
            <StackPanel Orientation="Horizontal"
                        Margin="12 10 0 5"
                        Visibility="{Binding ScriptPlaylist, Converter={StaticResource notNullToVisibileConverter}}">
                <TextBlock Text="Playlist" 
                           VerticalAlignment="Center"
                           Margin="0 0 15 0"
                           FontSize="14"
                           FontWeight="Bold"
                           Typography.Capitals="AllSmallCaps"/>

                <material:Badged Badge="{Binding PlaylistIndex, Converter={StaticResource MathAddConverter}, ConverterParameter=1}"
                                 BadgePlacementMode="Bottom"
                                 BadgeColorZoneMode="Dark"
                                 VerticalAlignment="Center"
                                 behaviours:BadgedAssist.AutoSizeToBadgeContent="True">
                </material:Badged>

                <TextBlock Text="/" 
                           VerticalAlignment="Center"
                           Margin="3 0 3 0"
                           FontSize="14"
                           FontWeight="Bold"/>

                <material:Badged Badge="{Binding ScriptPlaylist.Count}"
                                 BadgePlacementMode="Bottom"
                                 BadgeColorZoneMode="Dark"
                                 VerticalAlignment="Center"
                                 behaviours:BadgedAssist.AutoSizeToBadgeContent="True"/>
            </StackPanel>

            <ContentControl>
                <ContentControl.Resources>
                    <Style TargetType="{x:Type ContentControl}">
                        <Style.Setters>
                            <Setter Property="Content">
                                <Setter.Value>
                                    <Border BorderThickness="1"
                                            Margin="15 15 15 15"
                                            Height="80">
                                        <Border.BorderBrush>
                                            <DrawingBrush Viewport="0 0 8 8" ViewportUnits="Absolute" TileMode="Tile">
                                                <DrawingBrush.Drawing>
                                                    <DrawingGroup>
                                                        <GeometryDrawing Brush="LightGray">
                                                            <GeometryDrawing.Geometry>
                                                                <GeometryGroup>
                                                                    <RectangleGeometry Rect="0 0 50 50" />
                                                                    <RectangleGeometry Rect="50 50 50 50" />
                                                                </GeometryGroup>
                                                            </GeometryDrawing.Geometry>
                                                        </GeometryDrawing>
                                                    </DrawingGroup>
                                                </DrawingBrush.Drawing>
                                            </DrawingBrush>
                                        </Border.BorderBrush>

                                        <StackPanel VerticalAlignment="Center"
                                                    HorizontalAlignment="Center">
                                            <material:PackIcon Kind="InboxArrowDown"
                                                               Width="40"
                                                               Height="40"
                                                               Foreground="LightGray"
                                                               HorizontalAlignment="Center"/>
                                            <TextBlock Text="Drop scripts here"
                                                       Foreground="LightGray"
                                                       Typography.Capitals="AllSmallCaps"/>
                                        </StackPanel>
                                    </Border>
                                </Setter.Value>
                            </Setter>
                        </Style.Setters>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ScriptPlaylist.Count, Converter={StaticResource NotZeroConverter}}" Value="True">
                                <DataTrigger.Setters>
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <ItemsControl ItemsSource="{Binding ScriptPlaylist}"
                                                          VirtualizingStackPanel.IsVirtualizing="True"
                                                          VirtualizingStackPanel.VirtualizationMode="Standard"
                                                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                          Margin="0"
                                                          MaxHeight="200">
                                                <ItemsControl.Template>
                                                    <ControlTemplate TargetType="ItemsControl">
                                                        <ScrollViewer CanContentScroll="True" 
                                                                      Focusable="False">
                                                            <ItemsPresenter/>
                                                        </ScrollViewer>
                                                    </ControlTemplate>
                                                </ItemsControl.Template>
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <VirtualizingStackPanel IsVirtualizing="True"
                                                                                VirtualizationMode="Standard"/>
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>

                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Button x:Name="Container"
                                                                HorizontalAlignment="Stretch"
                                                                Margin="8 3 8 0"
                                                                VerticalContentAlignment="Center"
                                                                HorizontalContentAlignment="Stretch"
                                                                Click="{s:Action OnPlayScript}"
                                                                Foreground="{DynamicResource MaterialDesignBody}"
                                                                Background="{DynamicResource MaterialDesignCardBackground}"
                                                                material:RippleAssist.Feedback="{DynamicResource PrimaryHueMidBrush}">
                                                            <Button.Style>
                                                                <Style TargetType="{x:Type ButtonBase}">
                                                                    <Setter Property="Cursor" Value="Hand" />
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                                                <material:Card x:Name="Container"
                                                                                               Foreground="{TemplateBinding Foreground}"
                                                                                               Background="{TemplateBinding Background}">
                                                                                    <Grid>
                                                                                        <material:Ripple Padding="0"
                                                                                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                         Content="{TemplateBinding Content}"
                                                                                                         ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                         ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                         Focusable="False"
                                                                                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                                            <material:Ripple.Clip>
                                                                                                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                                                                                    <Binding ElementName="Container" Path="ActualWidth" />
                                                                                                    <Binding ElementName="Container" Path="ActualHeight" />
                                                                                                    <Binding ElementName="Container" Path="UniformCornerRadius" />
                                                                                                    <Binding ElementName="Container" Path="BorderThickness" />
                                                                                                </MultiBinding>
                                                                                            </material:Ripple.Clip>
                                                                                        </material:Ripple>
                                                                                    </Grid>
                                                                                </material:Card>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Button.Style>

                                                            <StackPanel Orientation="Horizontal">
                                                                <TextBlock Text="{Binding StringFormat={}#{0}, RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}, AncestorLevel=3}, Converter={StaticResource ItemIndexInContainerConverter}, ConverterParameter=1}" 
                                                                           FontWeight="Medium"
                                                                           Margin="5 0 5 0"
                                                                           FontSize="9"
                                                                           VerticalAlignment="Center"/>
                                                                <TextBlock Text="{Binding Name}" 
                                                                           Margin="5 3 5 3"
                                                                           FontWeight="Medium"
                                                                           VerticalAlignment="Center"/>
                                                            </StackPanel>
                                                        </Button>

                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Value="True">
                                                                <DataTrigger.Binding>
                                                                    <MultiBinding Converter="{StaticResource MultiObjectEqualToBooleanConverter}">
                                                                        <MultiBinding.Bindings>
                                                                            <Binding RelativeSource="{RelativeSource Self}" Converter="{StaticResource ItemIndexInContainerConverter}"/>
                                                                            <Binding Path="DataContext.ScriptPlaylist.Count" 
                                                                                     RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}"
                                                                                     Converter="{StaticResource MathAddConverter}"
                                                                                     ConverterParameter="-1"/>
                                                                        </MultiBinding.Bindings>
                                                                    </MultiBinding>
                                                                </DataTrigger.Binding>

                                                                <DataTrigger.Setters>
                                                                    <Setter Property="Margin" TargetName="Container" Value="8 3 8 8"/>
                                                                </DataTrigger.Setters>
                                                            </DataTrigger>

                                                            <DataTrigger Value="True">
                                                                <DataTrigger.Binding>
                                                                    <MultiBinding Converter="{StaticResource MultiObjectEqualToBooleanConverter}">
                                                                        <MultiBinding.Bindings>
                                                                            <Binding RelativeSource="{RelativeSource Self}" Converter="{StaticResource ItemIndexInContainerConverter}"/>
                                                                            <Binding Path="DataContext.PlaylistIndex" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}"/>
                                                                        </MultiBinding.Bindings>
                                                                    </MultiBinding>
                                                                </DataTrigger.Binding>

                                                                <DataTrigger.Setters>
                                                                    <Setter Property="Background" TargetName="Container" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                                                    <Setter Property="Foreground" TargetName="Container" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                                                    <Setter Property="material:RippleAssist.Feedback" TargetName="Container" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                                                </DataTrigger.Setters>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger.Setters>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Resources>
            </ContentControl>
        </StackPanel>
    </Expander>
</UserControl>
