<UserControl x:Class="MultiFunPlayer.MediaSource.Views.EmbyMediaSourceView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:s="https://github.com/canton7/Stylet"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:controls="clr-namespace:MultiFunPlayer.UI.Controls" 
             xmlns:ui="clr-namespace:MultiFunPlayer.UI"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             x:ClassModifier="internal">
    <Expander material:ExpanderAssist.HorizontalHeaderPadding="0 0 6 0"
              Style="{StaticResource MaterialDesignToolBarExpander}"
              Background="{DynamicResource MaterialDesignToolBarBackground}"
              IsExpanded="{Binding DataContext.ContentVisible, RelativeSource={RelativeSource FindAncestor, AncestorLevel=2, AncestorType={x:Type UserControl}}}">
        <Expander.Header>
            <StackPanel Orientation="Horizontal"
                        Height="36">
                <Button DockPanel.Dock="Left"
                        Command="{s:Action ToggleConnectAsync}"
                        CommandParameter="{Binding}"
                        s:View.ActionTarget="{Binding DataContext.Parent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                        IsEnabled="{Binding CanToggleConnect}"
                        material:ButtonProgressAssist.IsIndicatorVisible="{Binding IsConnectBusy}"
                        material:ButtonProgressAssist.Value="-1"
                        material:ButtonProgressAssist.IsIndeterminate="True">
                    <Button.Style>
                        <Style TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource MaterialDesignProgressToolBarButton}">
                            <Setter Property="ToolTip" Value="Connect" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                    <Setter Property="ToolTip" Value="Disconnect" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <material:PackIcon Width="19" Height="19">
                        <material:PackIcon.Style>
                            <Style TargetType="material:PackIcon" BasedOn="{StaticResource {x:Type material:PackIcon}}">
                                <Setter Property="Kind" Value="Play" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                        <Setter Property="Kind" Value="Stop" />
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.8" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </material:PackIcon.Style>
                    </material:PackIcon>
                </Button>

                <ToggleButton DockPanel.Dock="Left"
                              IsChecked="{Binding AutoConnectEnabled}"           
                              Style="{StaticResource MaterialDesignToolBarToggleButton}"
                              ToolTip="Auto-connect">
                    <material:PackIcon Kind="MotionPlayOutline" Opacity=".56" Width="20" Height="20"/>
                    <material:ToggleButtonAssist.OnContent>
                        <material:PackIcon Kind="MotionPlayOutline" Width="20" Height="20"/>
                    </material:ToggleButtonAssist.OnContent>
                </ToggleButton>
            </StackPanel>
        </Expander.Header>

        <StackPanel Margin="20"
                    IsEnabled="{Binding IsConnected, Converter={StaticResource NotConverter}}">
            <DockPanel LastChildFill="True"
                       Margin="0 0 0 20">
                <DockPanel LastChildFill="True" 
                           DockPanel.Dock="Left">
                    <TextBlock Text="Endpoint:"
                               DockPanel.Dock="Left"
                               Margin="0 0 10 0"
                               VerticalAlignment="Center"/>

                    <controls:EndPointBox EndPoint="{Binding ServerEndpoint}"
                                          DockPanel.Dock="Left"
                                          HorizontalAlignment="Left"/>
                </DockPanel>

                <DockPanel LastChildFill="False" 
                           DockPanel.Dock="Right">
                    <Button DockPanel.Dock="Right"
                            Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                            Command="{s:Action RefreshDevices}"
                            IsEnabled="{Binding CanRefreshDevices}"
                            Height="20"
                            Width="20"
                            Margin="0 1 0 0"
                            ToolTip="Refresh" 
                            VerticalAlignment="Center"
                            material:ButtonProgressAssist.IsIndicatorVisible="{Binding IsRefreshBusy}"
                            material:ButtonProgressAssist.Value="-1"
                            material:ButtonProgressAssist.IsIndeterminate="True">
                        <material:PackIcon Kind="Refresh"
                                           Width="16"
                                           Height="16"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"/>
                    </Button>

                    <ComboBox Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                              IsEnabled="{Binding CanChangeDevice}"
                              DockPanel.Dock="Right"
                              material:HintAssist.Hint="client"
                              material:TextFieldAssist.HasClearButton="True"
                              Margin="20 -12 10 0"
                              MinWidth="200"
                              ItemsSource="{Binding Devices}"
                              SelectedItem="{Binding SelectedDevice}"
                              VerticalAlignment="Center">
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="ComboBoxItem" BasedOn="{StaticResource MaterialDesignComboBoxItemStyle}">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            </Style>
                        </ComboBox.ItemContainerStyle>
                        <ComboBox.ItemTemplateSelector>
                            <ui:ComboBoxTemplateSelector>
                                <ui:ComboBoxTemplateSelector.DropdownItemsTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <TextBlock FontWeight="Bold" Text="{Binding Name}"/>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Typography.Capitals="AllSmallCaps" FontSize="10" Text="{Binding AppName}"/>
                                                <TextBlock Typography.Capitals="AllSmallCaps" FontSize="10"  Text="/"/>
                                                <TextBlock Typography.Capitals="AllSmallCaps" FontSize="10"  Text="{Binding AppVersion}"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </DataTemplate>
                                </ui:ComboBoxTemplateSelector.DropdownItemsTemplate>
                                <ui:ComboBoxTemplateSelector.SelectedItemTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <TextBlock Text="{Binding Name}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ui:ComboBoxTemplateSelector.SelectedItemTemplate>
                            </ui:ComboBoxTemplateSelector>
                        </ComboBox.ItemTemplateSelector>
                    </ComboBox>
                </DockPanel>
            </DockPanel>

            <DockPanel LastChildFill="True"
                       HorizontalAlignment="Left">
                <TextBox Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         Text="{Binding ApiKey}"
                         MinWidth="250"
                         Margin="0 -10 0 0"
                         DockPanel.Dock="Left"
                         HorizontalAlignment="Left"
                         VerticalAlignment="Center"
                         material:HintAssist.Hint="api key"/>
            </DockPanel>
        </StackPanel>
    </Expander>
</UserControl>
