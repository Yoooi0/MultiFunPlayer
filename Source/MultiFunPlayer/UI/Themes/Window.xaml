<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:MultiFunPlayer.UI.Controls"
                    xmlns:converters="clr-namespace:MultiFunPlayer.UI.Converters"
                    xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes">
    <Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="8 0 8 0"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Foreground" Value="{Binding Path=BorderForegroundBrush, RelativeSource={RelativeSource AncestorType=Window}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{TemplateBinding Foreground}">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType=Button}}" Value="False">
                                            <Setter Property="Opacity" Value="0"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType=Button}}" Value="True">
                                            <Setter Property="Opacity" Value="0.25"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <Border Padding="{TemplateBinding Padding}"
                                VerticalAlignment="Stretch"
                                Background="{TemplateBinding Background}">
                            <AdornerDecorator>
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            </AdornerDecorator>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Opacity" Value="0.75"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowMinimizeButtonStyle"
           BasedOn="{StaticResource WindowButtonStyle}"
           TargetType="{x:Type Button}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=ResizeMode, RelativeSource={RelativeSource AncestorType=Window}}" Value="NoResize">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ResizeMode, RelativeSource={RelativeSource AncestorType=Window}}" Value="CanMinimize">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="IsEnabled" Value="True"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ResizeMode, RelativeSource={RelativeSource AncestorType=Window}}" Value="CanResize">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="IsEnabled" Value="True"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ResizeMode, RelativeSource={RelativeSource AncestorType=Window}}" Value="CanResizeWithGrip">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="IsEnabled" Value="True"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowMaximizeRestoreButtonStyle"
           BasedOn="{StaticResource WindowButtonStyle}"
           TargetType="{x:Type Button}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=ResizeMode, RelativeSource={RelativeSource AncestorType=Window}}" Value="NoResize">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ResizeMode, RelativeSource={RelativeSource AncestorType=Window}}" Value="CanMinimize">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ResizeMode, RelativeSource={RelativeSource AncestorType=Window}}" Value="CanResize">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="IsEnabled" Value="True"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ResizeMode, RelativeSource={RelativeSource AncestorType=Window}}" Value="CanResizeWithGrip">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="IsEnabled" Value="True"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=WindowState, RelativeSource={RelativeSource TemplatedParent}}" Value="Normal">
                <Setter Property="ToolTip" Value="Maximize"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=WindowState, RelativeSource={RelativeSource TemplatedParent}}" Value="Maximized">
                <Setter Property="ToolTip" Value="Restore"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowCloseButtonStyle"
           BasedOn="{StaticResource WindowButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Visibility" Value="Visible"/>
        <Setter Property="IsEnabled" Value="True"/>
    </Style>

    <Style x:Key="WindowButtonIconStyle" TargetType="{x:Type material:PackIcon}">
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
    </Style>

    <Style x:Key="WindowTitleTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{Binding Path=BorderForegroundBrush, RelativeSource={RelativeSource AncestorType=Window}}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ResizeGripStyle" TargetType="{x:Type ResizeGrip}">
        <Setter Property="Height" Value="18"/>
        <Setter Property="Width" Value="18"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Opacity" Value="0.75"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ResizeGrip}">
                    <Grid Width="18"
                          Height="18"
                          Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="True">
                        <Grid.Resources>
                            <Style TargetType="Rectangle">
                                <Setter Property="Height" Value="2"/>
                                <Setter Property="Width" Value="2"/>
                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                <Setter Property="VerticalAlignment" Value="Top"/>
                                <Setter Property="Fill" Value="{Binding BorderBackgroundBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"/>
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                            </Style>
                        </Grid.Resources>
                        <Rectangle Margin="14 2 0 0"/>
                        <Rectangle Margin="14 6 0 0"/>
                        <Rectangle Margin="14 10 0 0"/>
                        <Rectangle Margin="14 14 0 0"/>
                        <Rectangle Margin="10 6 0 0"/>
                        <Rectangle Margin="10 10 0 0"/>
                        <Rectangle Margin="10 14 0 0"/>
                        <Rectangle Margin="6 10 0 0"/>
                        <Rectangle Margin="6 14 0 0"/>
                        <Rectangle Margin="2 14 0 0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=ResizeMode, RelativeSource={RelativeSource TemplatedParent}}" Value="CanResizeWithGrip">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MaterialDesignWindow" TargetType="{x:Type controls:MaterialWindow}">
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
        <Setter Property="BorderBackgroundBrush" Value="{DynamicResource PrimaryHueDarkBrush}"/>
        <Setter Property="BorderForegroundBrush" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
        <Setter Property="FontFamily" Value="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"/>
        <Setter Property="FadeContentIfInactive" Value="True"/>
        <Setter Property="MinWidth" Value="128"/>
        <Setter Property="MinHeight" Value="128"/>
        <Setter Property="TitleBarIcon" Value="{Binding Path=Icon, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="TitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Style="{StaticResource WindowTitleTextBlockStyle}"
                               Margin="8 0 0 0"
                               Text="{Binding Path=Title, RelativeSource={RelativeSource AncestorType={x:Type controls:MaterialWindow}}}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:MaterialWindow}">
                    <ControlTemplate.Resources>
                        <converters:WindowTitleVisibilityConverter x:Key="WindowTitleVisibilityConverter"/>
                        <converters:WindowTitleBarIconVisibilityConverter x:Key="WindowTitleBarIconVisibilityConverter"/>
                        <converters:WindowCaptionButtonVisibilityConverter x:Key="WindowCaptionButtonVisibilityConverter"/>
                        <converters:WindowCaptionButtonEnabledConverter x:Key="WindowCaptionButtonEnabledConverter"/>

                        <Storyboard x:Key="OpacityInStoryboard">
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             From="0.75"
                                             To="1"
                                             Duration="0:0:0.2">
                                <DoubleAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                        <Storyboard x:Key="OpacityOutStoryboard">
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             From="1"
                                             To="0.75"
                                             Duration="0:0:0.2">
                                <DoubleAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=WindowState, RelativeSource={RelativeSource TemplatedParent}}" Value="Normal">
                                        <Setter Property="Padding" Value="0"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=WindowState, RelativeSource={RelativeSource TemplatedParent}}" Value="Maximized">
                                        <Setter Property="Padding" Value="8"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Border Grid.Row="1"
                                Grid.Column="1"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{TemplateBinding BorderBackgroundBrush}"
                                BorderBrush="{TemplateBinding BorderBackgroundBrush}"
                                ClipToBounds="True">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=WindowState, RelativeSource={RelativeSource TemplatedParent}}" Value="Normal">
                                            <Setter Property="BorderThickness" Value="1"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=WindowState, RelativeSource={RelativeSource TemplatedParent}}" Value="Maximized">
                                            <Setter Property="BorderThickness" Value="0"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="100*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="100*"/>
                                </Grid.RowDefinitions>

                                <!--  window icon  -->
                                <Image Width="24"
                                       Height="24"
                                       Margin="8 0 8 0"
                                       VerticalAlignment="Center"
                                       Panel.ZIndex="2048"
                                       Source="{TemplateBinding TitleBarIcon}">
                                    <Image.Visibility>
                                        <MultiBinding Converter="{StaticResource WindowTitleBarIconVisibilityConverter}">
                                            <Binding Path="TitleBarIcon" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="WindowStyle" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        </MultiBinding>
                                    </Image.Visibility>
                                </Image>

                                <!--  window title  -->
                                <Border Grid.Column="1"
                                        Height="32"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Panel.ZIndex="2048">
                                    <Border.Visibility>
                                        <MultiBinding Converter="{StaticResource WindowTitleVisibilityConverter}">
                                            <Binding Path="WindowStyle" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        </MultiBinding>
                                    </Border.Visibility>
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding Path=FadeContentIfInactive, RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                                                        <Condition Binding="{Binding Path=IsActive, RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource OpacityInStoryboard}"/>
                                                    </MultiDataTrigger.EnterActions>
                                                    <MultiDataTrigger.ExitActions>
                                                        <BeginStoryboard Storyboard="{StaticResource OpacityOutStoryboard}"/>
                                                    </MultiDataTrigger.ExitActions>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <ContentControl HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Stretch"
                                                    ContentTemplate="{TemplateBinding TitleTemplate}"/>
                                </Border>

                                <!--  caption buttons  -->
                                <StackPanel Grid.Column="2"
                                            Height="32"
                                            VerticalAlignment="Stretch"
                                            Panel.ZIndex="2048"
                                            Orientation="Horizontal">
                                    <StackPanel.Visibility>
                                        <MultiBinding Converter="{StaticResource WindowTitleVisibilityConverter}">
                                            <Binding Path="WindowStyle" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        </MultiBinding>
                                    </StackPanel.Visibility>

                                    <Button x:Name="PART_MinimizeButton"
                                            Style="{StaticResource WindowMinimizeButtonStyle}"
                                            ToolTip="Minimize">
                                        <Button.Visibility>
                                            <MultiBinding Converter="{StaticResource WindowCaptionButtonVisibilityConverter}">
                                                <Binding ElementName="PART_MinimizeButton" Mode="OneTime"/>
                                                <Binding Path="WindowStyle" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                <Binding Path="ResizeMode" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            </MultiBinding>
                                        </Button.Visibility>
                                        <Button.IsEnabled>
                                            <MultiBinding Converter="{StaticResource WindowCaptionButtonEnabledConverter}">
                                                <Binding ElementName="PART_MinimizeButton" Mode="OneTime"/>
                                                <Binding Path="ResizeMode" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            </MultiBinding>
                                        </Button.IsEnabled>
                                        <material:PackIcon Style="{StaticResource WindowButtonIconStyle}" Kind="WindowMinimize"/>
                                    </Button>
                                    <Button x:Name="PART_MaximizeRestoreButton" Style="{StaticResource WindowMaximizeRestoreButtonStyle}">
                                        <Button.Visibility>
                                            <MultiBinding Converter="{StaticResource WindowCaptionButtonVisibilityConverter}">
                                                <Binding ElementName="PART_MaximizeRestoreButton" Mode="OneTime"/>
                                                <Binding Path="WindowStyle" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                <Binding Path="ResizeMode" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            </MultiBinding>
                                        </Button.Visibility>
                                        <Button.IsEnabled>
                                            <MultiBinding Converter="{StaticResource WindowCaptionButtonEnabledConverter}">
                                                <Binding ElementName="PART_MaximizeRestoreButton" Mode="OneTime"/>
                                                <Binding Path="ResizeMode" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            </MultiBinding>
                                        </Button.IsEnabled>
                                        <material:PackIcon>
                                            <material:PackIcon.Style>
                                                <Style BasedOn="{StaticResource WindowButtonIconStyle}" TargetType="{x:Type material:PackIcon}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=WindowState, RelativeSource={RelativeSource TemplatedParent}}" Value="Normal">
                                                            <Setter Property="Kind" Value="WindowMaximize"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=WindowState, RelativeSource={RelativeSource TemplatedParent}}" Value="Maximized">
                                                            <Setter Property="Kind" Value="WindowRestore"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </material:PackIcon.Style>
                                        </material:PackIcon>
                                    </Button>
                                    <Button x:Name="PART_CloseButton"
                                            Style="{StaticResource WindowCloseButtonStyle}"
                                            ToolTip="Close">
                                        <Button.Visibility>
                                            <MultiBinding Converter="{StaticResource WindowCaptionButtonVisibilityConverter}">
                                                <Binding ElementName="PART_CloseButton" Mode="OneTime"/>
                                                <Binding Path="WindowStyle" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                <Binding Path="ResizeMode" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            </MultiBinding>
                                        </Button.Visibility>
                                        <Button.IsEnabled>
                                            <MultiBinding Converter="{StaticResource WindowCaptionButtonEnabledConverter}">
                                                <Binding ElementName="PART_CloseButton" Mode="OneTime"/>
                                                <Binding Path="ResizeMode" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            </MultiBinding>
                                        </Button.IsEnabled>
                                        <material:PackIcon Style="{StaticResource WindowButtonIconStyle}" Kind="WindowClose"/>
                                    </Button>
                                </StackPanel>

                                <!--  window content  -->
                                <Border Grid.Row="1"
                                        Grid.ColumnSpan="3"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Panel.ZIndex="2047"
                                        Background="{TemplateBinding Background}">
                                    <AdornerDecorator>
                                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}">
                                            <ContentPresenter.Style>
                                                <Style TargetType="ContentPresenter">
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding Path=FadeContentIfInactive, RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                                                                <Condition Binding="{Binding Path=IsActive, RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.EnterActions>
                                                                <BeginStoryboard Storyboard="{StaticResource OpacityInStoryboard}"/>
                                                            </MultiDataTrigger.EnterActions>
                                                            <MultiDataTrigger.ExitActions>
                                                                <BeginStoryboard Storyboard="{StaticResource OpacityOutStoryboard}"/>
                                                            </MultiDataTrigger.ExitActions>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ContentPresenter.Style>
                                        </ContentPresenter>
                                    </AdornerDecorator>
                                </Border>

                                <!--  resize grip  -->
                                <ResizeGrip x:Name="resizeGrip"
                                            Grid.Row="1"
                                            Grid.Column="2"
                                            Style="{StaticResource ResizeGripStyle}"
                                            Panel.ZIndex="2048"/>
                            </Grid>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowState" Value="Normal">
                <Setter Property="WindowChrome.WindowChrome">
                    <Setter.Value>
                        <WindowChrome CaptionHeight="28"
                                      ResizeBorderThickness="4"
                                      UseAeroCaptionButtons="False"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter Property="WindowChrome.WindowChrome">
                    <Setter.Value>
                        <WindowChrome CaptionHeight="40"
                                      ResizeBorderThickness="0"
                                      UseAeroCaptionButtons="False"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="WindowChrome.WindowChrome">
                    <Setter.Value>
                        <WindowChrome CaptionHeight="28"
                                      ResizeBorderThickness="4,4,18,18"
                                      UseAeroCaptionButtons="False"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>