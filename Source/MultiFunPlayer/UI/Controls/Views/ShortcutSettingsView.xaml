<UserControl x:Class="MultiFunPlayer.UI.Controls.Views.ShortcutSettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:MultiFunPlayer.UI.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:rawinput="clr-namespace:MultiFunPlayer.Input.RawInput"
             xmlns:s="https://github.com/canton7/Stylet"
             xmlns:shortcut="clr-namespace:MultiFunPlayer.Shortcut"
             xmlns:tcode="clr-namespace:MultiFunPlayer.Input.TCode"
             xmlns:ui="clr-namespace:MultiFunPlayer.UI"
             xmlns:xinput="clr-namespace:MultiFunPlayer.Input.XInput"
             d:DesignHeight="450"
             d:DesignWidth="800"
             x:ClassModifier="internal"
             mc:Ignorable="d">
    <UserControl.Resources>
        <converters:MultiObjectEqualToBooleanConverter x:Key="MultiObjectEqualToBooleanConverter"/>
        <converters:ItemIndexInContainerConverter x:Key="ItemIndexInContainerConverter"/>
        <converters:EmptyStringToNullConverter x:Key="EmptyStringToNullConverter"/>
        <converters:GestureDescriptorToBrushConverter x:Key="GestureDescriptorToBrushConverter"/>
        <converters:GestureDescriptorToPackIconConverter x:Key="GestureDescriptorToPackIconConverter"/>

        <DataTemplate DataType="{x:Type shortcut:ButtonReleaseShortcut}">
            <DockPanel LastChildFill="False">
                <DockPanel DockPanel.Dock="Top" LastChildFill="True">
                    <TextBlock DockPanel.Dock="Left"
                               Margin="0 0 5 0"
                               VerticalAlignment="Center"
                               FontSize="12"
                               Text="Handle repeating:"/>

                    <CheckBox DockPanel.Dock="Left" IsChecked="{Binding HandleRepeating}"/>
                </DockPanel>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type shortcut:ButtonPressShortcut}">
            <DockPanel LastChildFill="False">
                <DockPanel DockPanel.Dock="Top" LastChildFill="True">
                    <TextBlock DockPanel.Dock="Left"
                               Margin="0 0 5 0"
                               VerticalAlignment="Center"
                               FontSize="12"
                               Text="Handle repeating:"/>

                    <CheckBox DockPanel.Dock="Left" IsChecked="{Binding HandleRepeating}"/>
                </DockPanel>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type shortcut:ButtonLongPressShortcut}">
            <DockPanel LastChildFill="False">
                <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                    <TextBlock DockPanel.Dock="Left"
                               Margin="0 0 10 0"
                               VerticalAlignment="Center"
                               FontSize="12"
                               Text="Minimum duration:"/>

                    <metro:NumericUpDown DockPanel.Dock="Left"
                                         Width="120"
                                         VerticalAlignment="Center"
                                         Minimum="1"
                                         StringFormat="{}{0}ms"
                                         Value="{Binding MinimumHoldDuration}"/>
                </DockPanel>

                <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                    <TextBlock DockPanel.Dock="Left"
                               Margin="0 0 10 0"
                               VerticalAlignment="Center"
                               FontSize="12"
                               Text="Maximum duration:"/>

                    <metro:NumericUpDown DockPanel.Dock="Left"
                                         Width="120"
                                         VerticalAlignment="Center"
                                         Minimum="-1"
                                         StringFormat="{}{0}ms"
                                         Value="{Binding MaximumHoldDuration}"/>

                    <DockPanel.Resources>
                        <Style TargetType="{x:Type DockPanel}">
                            <Setter Property="IsEnabled" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding InvokeType}" Value="WhileHolding">
                                    <DataTrigger.Setters>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger.Setters>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DockPanel.Resources>
                </DockPanel>


                <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                    <TextBlock DockPanel.Dock="Left"
                               Margin="0 0 10 0"
                               VerticalAlignment="Center"
                               FontSize="12"
                               Text="Invoke type:"/>

                    <ComboBox DockPanel.Dock="Left"
                              ItemsSource="{Binding Source={ui:EnumBindingSource {x:Type shortcut:ButtonLongPressInvokeType}}}"
                              SelectedItem="{Binding InvokeType}"/>
                </DockPanel>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type shortcut:ButtonClickShortcut}">
            <DockPanel LastChildFill="False">
                <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                    <TextBlock DockPanel.Dock="Left"
                               Margin="0 0 10 0"
                               VerticalAlignment="Center"
                               FontSize="12"
                               Text="Click count:"/>

                    <metro:NumericUpDown DockPanel.Dock="Left"
                                         Width="80"
                                         VerticalAlignment="Center"
                                         Minimum="1"
                                         Value="{Binding ClickCount}"/>

                </DockPanel>
                <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                    <TextBlock DockPanel.Dock="Left"
                               Margin="0 0 10 0"
                               VerticalAlignment="Center"
                               FontSize="12"
                               Text="Maximum click interval:"/>

                    <metro:NumericUpDown DockPanel.Dock="Left"
                                         Width="150"
                                         VerticalAlignment="Center"
                                         Minimum="1"
                                         StringFormat="{}{0}ms"
                                         Value="{Binding MaximumClickInterval}"/>
                </DockPanel>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type shortcut:AxisDriveShortcut}">
            <DockPanel LastChildFill="False">
                <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                    <TextBlock DockPanel.Dock="Left"
                               Margin="0 0 10 0"
                               VerticalAlignment="Center"
                               FontSize="12"
                               Text="Mode:"/>

                    <ComboBox DockPanel.Dock="Left"
                              ItemsSource="{Binding Source={ui:EnumBindingSource {x:Type shortcut:AxisDriveShortcutMode}}}"
                              SelectedItem="{Binding DriveMode}"
                              Width="150"
                              VerticalAlignment="Center"
                              FontSize="12"/>
                </DockPanel>
                <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                    <TextBlock DockPanel.Dock="Left"
                               Margin="0 0 5 0"
                               VerticalAlignment="Center"
                               FontSize="12"
                               Text="Invert:"/>

                    <CheckBox DockPanel.Dock="Left" IsChecked="{Binding Invert}"/>
                </DockPanel>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type shortcut:AxisThresholdShortcut}">
            <DockPanel LastChildFill="False">
                <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                    <TextBlock DockPanel.Dock="Left"
                               Margin="0 0 10 0"
                               VerticalAlignment="Center"
                               FontSize="12"
                               Text="Trigger value:"/>

                    <metro:NumericUpDown DockPanel.Dock="Left"
                                         Width="100"
                                         VerticalAlignment="Center"
                                         Maximum="1"
                                         Minimum="0"
                                         StringFormat="P0"
                                         Value="{Binding Threshold}"/>

                </DockPanel>
                <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                    <TextBlock DockPanel.Dock="Left"
                               Margin="0 0 10 0"
                               VerticalAlignment="Center"
                               FontSize="12"
                               Text="Mode:"/>

                    <ComboBox DockPanel.Dock="Left"
                              ItemsSource="{Binding Source={ui:EnumBindingSource {x:Type shortcut:AxisThresholdTriggerMode}}}"
                              SelectedItem="{Binding TriggerMode}"
                              Width="100"
                              VerticalAlignment="Center"
                              FontSize="12"/>
                </DockPanel>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type shortcut:AxisOffsetShortcut}">
            <DockPanel LastChildFill="False">
                <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                    <TextBlock DockPanel.Dock="Left"
                               Margin="0 0 10 0"
                               VerticalAlignment="Center"
                               FontSize="12"
                               Text="Mode:"/>

                    <ComboBox DockPanel.Dock="Left"
                              ItemsSource="{Binding Source={ui:EnumBindingSource {x:Type shortcut:AxisOffsetShortcutMode}}}"
                              SelectedItem="{Binding OffsetMode}"
                              Width="130"
                              VerticalAlignment="Center"
                              FontSize="12"/>
                </DockPanel>
                <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                    <TextBlock DockPanel.Dock="Left"
                               Margin="0 0 10 0"
                               VerticalAlignment="Center"
                               FontSize="12"
                               Text="Speed:"/>

                    <metro:NumericUpDown DockPanel.Dock="Left"
                                         Width="100"
                                         VerticalAlignment="Center"
                                         Maximum="1"
                                         Minimum="0"
                                         StringFormat="P0"
                                         Value="{Binding Speed}"/>

                </DockPanel>
                <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                    <TextBlock DockPanel.Dock="Left"
                               Margin="0 0 5 0"
                               VerticalAlignment="Center"
                               FontSize="12"
                               Text="Invert:"/>

                    <CheckBox DockPanel.Dock="Left" IsChecked="{Binding Invert}"/>
                </DockPanel>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type xinput:GamepadButtonGestureDescriptor}">
            <DockPanel LastChildFill="True">
                <TextBlock Margin="0 0 0 0"
                           VerticalAlignment="Center"
                           FontSize="12"
                           Text="User:"
                           Typography.Capitals="AllSmallCaps"/>

                <TextBlock Margin="5 0 0 0"
                           VerticalAlignment="Center"
                           FontSize="12"
                           FontWeight="Bold"
                           Text="{Binding UserIndex}"
                           Typography.Capitals="AllSmallCaps"/>

                <TextBlock Margin="10 0 0 0"
                           VerticalAlignment="Center"
                           FontSize="12"
                           Text="Buttons:"
                           Typography.Capitals="AllSmallCaps"/>

                <ItemsControl DockPanel.Dock="Left"
                              ItemsSource="{Binding Buttons}"
                              Margin="5 0 0 0"
                              VerticalAlignment="Center"
                              AlternationCount="{Binding RelativeSource={RelativeSource Self}, Path=Items.Count}">
                    <ItemsControl.Resources>
                        <converters:GamepadKeyToStringConverter x:Key="GamepadKeyToStringConverter"/>
                    </ItemsControl.Resources>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock x:Name="Separator"
                                           VerticalAlignment="Center"
                                           FontSize="12"
                                           FontWeight="Bold"
                                           Text=", "
                                           Typography.Capitals="AllSmallCaps"/>
                                <TextBlock VerticalAlignment="Center"
                                           FontSize="12"
                                           FontWeight="Bold"
                                           Text="{Binding Mode=OneWay, Converter={StaticResource GamepadKeyToStringConverter}}"
                                           Typography.Capitals="AllSmallCaps"/>
                            </StackPanel>

                            <DataTemplate.Triggers>
                                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                    <Setter TargetName="Separator" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type xinput:GamepadAxisGestureDescriptor}">
            <DockPanel LastChildFill="True">
                <TextBlock Margin="0 0 0 0"
                           VerticalAlignment="Center"
                           FontSize="12"
                           Text="User:"
                           Typography.Capitals="AllSmallCaps"/>

                <TextBlock Margin="5 0 0 0"
                           VerticalAlignment="Center"
                           FontSize="12"
                           FontWeight="Bold"
                           Text="{Binding UserIndex}"
                           Typography.Capitals="AllSmallCaps"/>

                <TextBlock Margin="10 0 5 0"
                           VerticalAlignment="Center"
                           FontSize="12"
                           Text="Axis:"
                           Typography.Capitals="AllSmallCaps"/>

                <TextBlock VerticalAlignment="Center"
                           FontSize="12"
                           FontWeight="Bold"
                           Text="{Binding Axis, StringFormat={}{0}}"
                           Typography.Capitals="AllSmallCaps"/>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type tcode:TCodeButtonGestureDescriptor}">
            <DockPanel LastChildFill="True">
                <TextBlock Margin="0 0 5 0"
                           VerticalAlignment="Center"
                           FontSize="12"
                           Text="Button:"
                           Typography.Capitals="AllSmallCaps"/>

                <TextBlock VerticalAlignment="Center"
                           FontSize="12"
                           FontWeight="Bold"
                           Text="{Binding Button, StringFormat={}{0}}"
                           Typography.Capitals="AllSmallCaps"/>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type tcode:TCodeAxisGestureDescriptor}">
            <DockPanel LastChildFill="True">
                <TextBlock Margin="0 0 5 0"
                           VerticalAlignment="Center"
                           FontSize="12"
                           Text="Axis:"
                           Typography.Capitals="AllSmallCaps"/>

                <TextBlock VerticalAlignment="Center"
                           FontSize="12"
                           FontWeight="Bold"
                           Text="{Binding Axis, StringFormat={}{0}}"
                           Typography.Capitals="AllSmallCaps"/>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type rawinput:MouseButtonGestureDescriptor}">
            <DockPanel LastChildFill="True">
                <TextBlock Margin="0 0 5 0"
                           VerticalAlignment="Center"
                           FontSize="12"
                           Text="Button:"
                           Typography.Capitals="AllSmallCaps"/>

                <TextBlock VerticalAlignment="Center"
                           FontSize="12"
                           FontWeight="Bold"
                           Text="{Binding Button, StringFormat={}{0}}"
                           Typography.Capitals="AllSmallCaps"/>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type rawinput:MouseAxisGestureDescriptor}">
            <DockPanel LastChildFill="True">
                <TextBlock Margin="0 0 5 0"
                           VerticalAlignment="Center"
                           FontSize="12"
                           Text="Axis:"
                           Typography.Capitals="AllSmallCaps"/>

                <TextBlock VerticalAlignment="Center"
                           FontSize="12"
                           FontWeight="Bold"
                           Text="{Binding Axis, StringFormat={}{0}}"
                           Typography.Capitals="AllSmallCaps"/>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type rawinput:KeyboardGestureDescriptor}">
            <DockPanel LastChildFill="True">
                <TextBlock Margin="0 0 5 0"
                           VerticalAlignment="Center"
                           FontSize="12"
                           Text="Keys:"
                           Typography.Capitals="AllSmallCaps"/>

                <ItemsControl DockPanel.Dock="Left"
                              ItemsSource="{Binding Keys}"
                              VerticalAlignment="Center"
                              AlternationCount="{Binding RelativeSource={RelativeSource Self}, Path=Items.Count}">
                    <ItemsControl.Resources>
                        <converters:KeyToStringConverter x:Key="KeyToStringConverter"/>
                    </ItemsControl.Resources>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock x:Name="Separator"
                                           VerticalAlignment="Center"
                                           FontSize="12"
                                           FontWeight="Bold"
                                           Text=", "
                                           Typography.Capitals="AllSmallCaps"/>
                                <TextBlock VerticalAlignment="Center"
                                           FontSize="12"
                                           FontWeight="Bold"
                                           Text="{Binding Mode=OneWay, Converter={StaticResource KeyToStringConverter}}"
                                           Typography.Capitals="AllSmallCaps"/>
                            </StackPanel>

                            <DataTemplate.Triggers>
                                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                    <Setter TargetName="Separator" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </DockPanel>
        </DataTemplate>
    </UserControl.Resources>

    <Grid Width="550"
          MaxHeight="700"
          Margin="20">
        <DockPanel LastChildFill="True">
            <material:Card DockPanel.Dock="Top"
                           Margin="0 0 0 10"
                           material:ShadowAssist.ShadowDepth="Depth1"
                           IsEnabled="{Binding IsCapturingGestures, Converter={StaticResource NotConverter}}">
                <DockPanel Margin="5">
                    <DockPanel DockPanel.Dock="Top" LastChildFill="True">
                        <TextBlock DockPanel.Dock="Left"
                                   Margin="5 0 10 0"
                                   VerticalAlignment="Center"
                                   Text="Shortcut:"/>

                        <Button DockPanel.Dock="Right"
                                Style="{StaticResource MaterialDesignFlatButton}"
                                Width="32"
                                Height="32"
                                Margin="0"
                                Padding="0"
                                VerticalAlignment="Center"
                                Click="{s:Action AddShortcut}"
                                Foreground="{DynamicResource MaterialDesignSuccessBrush}"
                                ToolTip="Add shortcut">
                            <material:PackIcon Width="28"
                                               Height="28"
                                               Kind="Plus"/>
                            <Button.IsEnabled>
                                <MultiBinding Converter="{StaticResource BooleanAndConverter}">
                                    <Binding Converter="{StaticResource InvertedNullableToBooleanConverter}" Path="SelectedShortcutType"/>
                                    <Binding Converter="{StaticResource InvertedNullableToBooleanConverter}" Path="SelectedCapturedGesture"/>
                                </MultiBinding>
                            </Button.IsEnabled>
                        </Button>

                        <ComboBox DockPanel.Dock="Left"
                                  ItemsSource="{Binding ShortcutTypes}"
                                  SelectedItem="{Binding SelectedShortcutType}"
                                  Margin="0 0 10 0"
                                  material:TextFieldAssist.HasClearButton="True">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={StaticResource DisplayNameConverter}}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </DockPanel>

                    <DockPanel DockPanel.Dock="Top"
                               Height="35"
                               IsEnabled="{Binding SelectedShortcutType, Converter={StaticResource InvertedNullableToBooleanConverter}}"
                               LastChildFill="True">
                        <Button DockPanel.Dock="Right"
                                Style="{StaticResource MaterialDesignFlatButton}"
                                Width="32"
                                Height="32"
                                Margin="0"
                                Padding="0"
                                VerticalAlignment="Center"
                                material:ButtonProgressAssist.IsIndeterminate="True"
                                material:ButtonProgressAssist.IsIndicatorVisible="{Binding IsCapturingGestures}"
                                Click="{s:Action CaptureGestures}"
                                ToolTip="Start capturing">
                            <material:PackIcon Width="28"
                                               Height="28"
                                               Kind="Input"/>
                        </Button>

                        <TextBlock DockPanel.Dock="Left"
                                   Margin="5 0 14 0"
                                   VerticalAlignment="Center"
                                   Text="Gesture:"/>

                        <ComboBox ItemsSource="{Binding CapturedGestures}"
                                  SelectedItem="{Binding SelectedCapturedGesture}"
                                  Margin="0 0 10 0"
                                  Padding="0 5"
                                  material:TextFieldAssist.HasClearButton="True"
                                  IsEnabled="{Binding CapturedGestures.Count, Mode=OneWay, Converter={StaticResource NotZeroConverter}}">
                            <material:HintAssist.Hint>
                                <TextBlock Text="{Binding CapturedGestures.Count, StringFormat='Captured {0} gestures'}"
                                           Typography.Capitals="AllSmallCaps"
                                           Visibility="{Binding CapturedGestures.Count, Converter={StaticResource NotZeroToVisibilityConverter}}"/>
                            </material:HintAssist.Hint>
                            <ComboBox.ItemContainerStyle>
                                <Style BasedOn="{StaticResource MaterialDesignComboBoxItemStyle}" TargetType="{x:Type ComboBoxItem}">
                                    <Setter Property="Padding" Value="5"/>
                                </Style>
                            </ComboBox.ItemContainerStyle>
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <material:Card material:ShadowAssist.ShadowDepth="Depth1">
                                        <StackPanel Orientation="Horizontal">
                                            <material:ColorZone Width="28"
                                                                Height="24"
                                                                HorizontalAlignment="Stretch"
                                                                VerticalAlignment="Stretch"
                                                                Background="{Binding Converter={StaticResource GestureDescriptorToBrushConverter}}"
                                                                CornerRadius="4 0 0 4">
                                                <material:PackIcon DockPanel.Dock="Left"
                                                                   Width="24"
                                                                   Height="20"
                                                                   HorizontalAlignment="Center"
                                                                   VerticalAlignment="Center"
                                                                   Foreground="Black"
                                                                   Kind="{Binding Converter={StaticResource GestureDescriptorToPackIconConverter}}"/>
                                            </material:ColorZone>

                                            <ContentControl Margin="5 0 0 0" Content="{Binding}"/>
                                        </StackPanel>
                                    </material:Card>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </DockPanel>
                </DockPanel>
            </material:Card>

            <material:Card DockPanel.Dock="Bottom"
                           MaxHeight="350"
                           material:ShadowAssist.ShadowDepth="Depth1">
                <Expander DockPanel.Dock="Bottom"
                          Style="{StaticResource MaterialDesignToolBarExpander}"
                          Background="{DynamicResource MaterialDesignCardBackground}">
                    <Expander.Header>
                        <TabControl x:Name="HeaderTabControl"
                                    Style="{StaticResource MaterialDesignTabControl}"
                                    HorizontalContentAlignment="Left"
                                    material:ColorZoneAssist.Background="{DynamicResource MaterialDesignCardBackground}"
                                    material:ColorZoneAssist.Foreground="{DynamicResource PrimaryHueMidBrush}"
                                    material:ColorZoneAssist.Mode="Custom">
                            <TabItem Width="100" Header="Actions"/>
                            <TabItem Width="100" Header="Settings"/>
                        </TabControl>
                    </Expander.Header>

                    <Grid DockPanel.Dock="Top"
                          Height="300"
                          IsEnabled="{Binding SelectedShortcut, Converter={StaticResource InvertedNullableToBooleanConverter}}">
                        <DockPanel LastChildFill="True">
                            <DockPanel.Style>
                                <Style TargetType="{x:Type DockPanel}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedItem.Header, ElementName=HeaderTabControl}" Value="Settings">
                                            <DataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Style>

                            <DockPanel DockPanel.Dock="Top"
                                       Margin="10 10 10 0"
                                       LastChildFill="True">
                                <TextBlock DockPanel.Dock="Left"
                                           Margin="0 0 10 0"
                                           VerticalAlignment="Center"
                                           FontSize="12"
                                           Text="Name:"/>

                                <TextBox DockPanel.Dock="Top"
                                         material:TextFieldAssist.HasClearButton="True"
                                         Text="{Binding SelectedShortcut.Name, Converter={StaticResource EmptyStringToNullConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                            </DockPanel>

                            <ContentControl DockPanel.Dock="Top"
                                            Margin="10"
                                            Content="{Binding SelectedShortcut}"/>
                        </DockPanel>

                        <DockPanel LastChildFill="True">
                            <DockPanel.Style>
                                <Style TargetType="{x:Type DockPanel}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedItem.Header, ElementName=HeaderTabControl}" Value="Actions">
                                            <DataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Style>

                            <ItemsControl DockPanel.Dock="Top"
                                          ItemsSource="{Binding SelectedShortcut.Configurations}"
                                          Height="100"
                                          MaxHeight="100"
                                          Margin="10 10 0 0"
                                          VirtualizingStackPanel.IsVirtualizing="True"
                                          VirtualizingStackPanel.VirtualizationMode="Recycling">
                                <ItemsControl.Template>
                                    <ControlTemplate TargetType="ItemsControl">
                                        <ScrollViewer CanContentScroll="True" Focusable="False">
                                            <ItemsPresenter/>
                                        </ScrollViewer>
                                    </ControlTemplate>
                                </ItemsControl.Template>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <DockPanel>
                                            <Button DockPanel.Dock="Right"
                                                    Style="{StaticResource MaterialDesignFlatButton}"
                                                    Width="24"
                                                    Height="24"
                                                    Margin="0 0 5 0"
                                                    Padding="0"
                                                    material:RippleAssist.Feedback="{DynamicResource MaterialDesignErrorBrush}"
                                                    Click="{s:Action RemoveAssignedAction}"
                                                    Foreground="{DynamicResource MaterialDesignErrorBrush}"
                                                    ToolTip="Remove">
                                                <material:PackIcon Kind="Delete"/>
                                            </Button>

                                            <Button DockPanel.Dock="Right"
                                                    Style="{StaticResource MaterialDesignFlatButton}"
                                                    Width="24"
                                                    Height="24"
                                                    Padding="0"
                                                    Click="{s:Action MoveAssignedActionUp}"
                                                    ToolTip="Move Up">
                                                <material:PackIcon Kind="ArrowUp"/>
                                            </Button>
                                            <Button DockPanel.Dock="Right"
                                                    Style="{StaticResource MaterialDesignFlatButton}"
                                                    Width="24"
                                                    Height="24"
                                                    Padding="0"
                                                    Click="{s:Action MoveAssignedActionDown}"
                                                    ToolTip="Move Down">
                                                <material:PackIcon Kind="ArrowDown"/>
                                            </Button>

                                            <Button DockPanel.Dock="Right"
                                                    Style="{StaticResource MaterialDesignFlatButton}"
                                                    Width="22"
                                                    Height="22"
                                                    Padding="0"
                                                    Click="{s:Action ConfigureAssignedAction}"
                                                    ToolTip="Configure"
                                                    Visibility="{Binding Settings.Count, Converter={StaticResource NotZeroToVisibilityConverter}}">
                                                <material:PackIcon Width="14"
                                                                   Height="14"
                                                                   Kind="Wrench"/>
                                            </Button>

                                            <TextBlock DockPanel.Dock="Left"
                                                       Margin="0"
                                                       VerticalAlignment="Center"
                                                       Text="{Binding DisplayName}"/>
                                        </DockPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>

                            <TextBox DockPanel.Dock="Top"
                                     Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                     Margin="10 0 10 0"
                                     material:HintAssist.Hint="Filter actions"
                                     Text="{Binding ActionsFilter, UpdateSourceTrigger=PropertyChanged, Delay=200}"/>

                            <ItemsControl DockPanel.Dock="Top"
                                          ItemsSource="{Binding AvailableActionsView}"
                                          MaxHeight="150"
                                          Margin="10 10 0 0"
                                          ScrollViewer.VerticalScrollBarVisibility="Visible"
                                          VirtualizingStackPanel.IsVirtualizing="True"
                                          VirtualizingStackPanel.VirtualizationMode="Recycling">
                                <ItemsControl.Template>
                                    <ControlTemplate TargetType="ItemsControl">
                                        <ScrollViewer CanContentScroll="True" Focusable="False">
                                            <ItemsPresenter/>
                                        </ScrollViewer>
                                    </ControlTemplate>
                                </ItemsControl.Template>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <DockPanel>
                                            <Button DockPanel.Dock="Right"
                                                    Style="{StaticResource MaterialDesignFlatButton}"
                                                    Width="24"
                                                    Height="24"
                                                    Margin="0 0 5 0"
                                                    Padding="0"
                                                    Click="{s:Action AssignAction}"
                                                    ToolTip="Assign action">
                                                <material:PackIcon Kind="Plus"/>
                                            </Button>

                                            <TextBlock DockPanel.Dock="Left"
                                                       Margin="0"
                                                       VerticalAlignment="Center"
                                                       Text="{Binding}"/>
                                        </DockPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </DockPanel>
                    </Grid>
                </Expander>
            </material:Card>

            <material:Card DockPanel.Dock="Top"
                           Margin="0 0 0 10"
                           material:ShadowAssist.ShadowDepth="Depth1">
                <DockPanel MinHeight="250" LastChildFill="True">
                    <ListBox DockPanel.Dock="Top"
                             ItemsSource="{Binding Shortcuts}"
                             SelectedItem="{Binding SelectedShortcut}"
                             Background="{DynamicResource MaterialDesignCardBackground}"
                             BorderBrush="Transparent"
                             ScrollViewer.CanContentScroll="False"
                             ScrollViewer.VerticalScrollBarVisibility="Visible">
                        <ListBox.Resources>
                            <Style x:Key="ContainerStyle" TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListBoxItem">
                                            <material:Card Name="Container"
                                                           Margin="8 8 8 0"
                                                           material:ShadowAssist.ShadowDepth="Depth1"
                                                           Foreground="{DynamicResource MaterialDesignBody}">
                                                <ContentPresenter/>
                                            </material:Card>

                                            <ControlTemplate.Triggers>
                                                <DataTrigger Value="True">
                                                    <DataTrigger.Binding>
                                                        <MultiBinding Converter="{StaticResource MultiObjectEqualToBooleanConverter}">
                                                            <MultiBinding.Bindings>
                                                                <Binding Converter="{StaticResource ItemIndexInContainerConverter}" RelativeSource="{RelativeSource Self}"/>
                                                                <Binding Converter="{StaticResource MathAddConverter}"
                                                                         ConverterParameter="-1"
                                                                         Path="DataContext.Shortcuts.Count"
                                                                         RelativeSource="{RelativeSource FindAncestor,
                                                                                                         AncestorType={x:Type UserControl}}"/>
                                                            </MultiBinding.Bindings>
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>

                                                    <DataTrigger.Setters>
                                                        <Setter TargetName="Container" Property="Margin" Value="8 8 8 8"/>
                                                    </DataTrigger.Setters>
                                                </DataTrigger>

                                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                    <Setter TargetName="Container" Property="Panel.Background" Value="{DynamicResource MaterialDesignCardBackgroundHoverBrush}"/>
                                                </Trigger>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter TargetName="Container" Property="Background" Value="{DynamicResource MaterialDesignCardBackgroundSelectedBrush}"/>
                                                    <Setter TargetName="Container" Property="material:ShadowAssist.ShadowDepth" Value="Depth2"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style TargetType="ListBox">
                                <Setter Property="ItemContainerStyle" Value="{StaticResource ContainerStyle}"/>
                            </Style>
                        </ListBox.Resources>

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border>
                                    <DockPanel LastChildFill="True">
                                        <Button DockPanel.Dock="Right"
                                                Style="{StaticResource MaterialDesignFlatButton}"
                                                Width="24"
                                                Height="24"
                                                Margin="0 0 5 0"
                                                Padding="0"
                                                material:RippleAssist.Feedback="{DynamicResource MaterialDesignErrorBrush}"
                                                Click="{s:Action RemoveShortcut}"
                                                Foreground="{DynamicResource MaterialDesignErrorBrush}"
                                                ToolTip="Remove">
                                            <material:PackIcon Kind="Delete"/>
                                        </Button>

                                        <ToggleButton DockPanel.Dock="Right"
                                                      Height="14"
                                                      IsChecked="{Binding Enabled}">
                                            <ToggleButton.Resources>
                                                <Style BasedOn="{StaticResource MaterialDesignSwitchToggleButton}" TargetType="{x:Type ToggleButton}">
                                                    <Setter Property="ToolTip" Value="Enable"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter Property="ToolTip" Value="Disable"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ToggleButton.Resources>
                                        </ToggleButton>

                                        <TextBlock DockPanel.Dock="Right"
                                                   Margin="5 0 10 0"
                                                   VerticalAlignment="Center"
                                                   FontWeight="Medium"
                                                   Text="{Binding Configurations.Count, StringFormat=Actions: {0}}"
                                                   Typography.Capitals="AllSmallCaps"/>

                                        <material:ColorZone Width="34"
                                                            Height="30"
                                                            HorizontalAlignment="Stretch"
                                                            VerticalAlignment="Stretch"
                                                            Background="{Binding Gesture, Converter={StaticResource GestureDescriptorToBrushConverter}}"
                                                            CornerRadius="4 0 0 4">
                                            <material:PackIcon DockPanel.Dock="Left"
                                                               Width="28"
                                                               Height="24"
                                                               HorizontalAlignment="Center"
                                                               VerticalAlignment="Center"
                                                               Foreground="Black"
                                                               Kind="{Binding Gesture, Converter={StaticResource GestureDescriptorToPackIconConverter}}"/>
                                        </material:ColorZone>

                                        <StackPanel Height="24"
                                                    Margin="5 0 0 0"
                                                    Orientation="Vertical">
                                            <StackPanel Margin="0 -2 0 0" Orientation="Horizontal">
                                                <TextBlock VerticalAlignment="Center"
                                                           FontSize="11"
                                                           FontWeight="Medium"
                                                           Text="{Binding Converter={StaticResource DisplayNameConverter}}"
                                                           Typography.Capitals="AllSmallCaps"/>

                                                <TextBlock Margin="0 0 5 0"
                                                           VerticalAlignment="Center"
                                                           FontSize="11"
                                                           FontWeight="Bold"
                                                           Text=":"
                                                           Typography.Capitals="AllSmallCaps"
                                                           Visibility="{Binding Name, Converter={StaticResource NullableToVisibilityConverter}}"/>

                                                <TextBlock VerticalAlignment="Center"
                                                           FontSize="11"
                                                           FontWeight="Bold"
                                                           Text="{Binding Name}"
                                                           Typography.Capitals="AllSmallCaps"
                                                           Visibility="{Binding Name, Converter={StaticResource NullableToVisibilityConverter}}"/>
                                            </StackPanel>

                                            <ContentControl VerticalAlignment="Center" Content="{Binding Gesture}"/>
                                        </StackPanel>
                                    </DockPanel>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </material:Card>
        </DockPanel>
    </Grid>
</UserControl>
