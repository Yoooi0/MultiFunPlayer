<UserControl x:Class="MultiFunPlayer.UI.Controls.Views.ShortcutSettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:s="https://github.com/canton7/Stylet"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:MultiFunPlayer.UI.Converters"
             xmlns:rawinput="clr-namespace:MultiFunPlayer.Input.RawInput"
             xmlns:xinput="clr-namespace:MultiFunPlayer.Input.XInput"
             xmlns:tcode="clr-namespace:MultiFunPlayer.Input.TCode"
             xmlns:shortcut="clr-namespace:MultiFunPlayer.Shortcut"
             xmlns:ui="clr-namespace:MultiFunPlayer.UI"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             x:ClassModifier="internal">
    <UserControl.Resources>
        <converters:MultiObjectEqualToBooleanConverter x:Key="MultiObjectEqualToBooleanConverter"/>
        <converters:ItemIndexInContainerConverter x:Key="ItemIndexInContainerConverter"/>
        <converters:GestureDescriptorToBrushConverter x:Key="GestureDescriptorToBrushConverter"/>
        <converters:GestureDescriptorToPackIconConverter x:Key="GestureDescriptorToPackIconConverter"/>

        <DataTemplate DataType="{x:Type shortcut:ReleaseShortcut}">
            <DockPanel LastChildFill="False">
                <DockPanel DockPanel.Dock="Top"
                           LastChildFill="True">
                    <TextBlock Text="Handle repeating:"
                               DockPanel.Dock="Left"
                               Margin="0 0 5 0"
                               VerticalAlignment="Center"
                               FontSize="12"/>

                    <CheckBox IsChecked="{Binding HandleRepeating}"
                              DockPanel.Dock="Left"/>
                </DockPanel>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type shortcut:PressShortcut}">
            <DockPanel LastChildFill="False">
                <DockPanel DockPanel.Dock="Top"
                           LastChildFill="True">
                    <TextBlock Text="Handle repeating:"
                               DockPanel.Dock="Left"
                               Margin="0 0 5 0"
                               VerticalAlignment="Center"
                               FontSize="12"/>

                    <CheckBox IsChecked="{Binding HandleRepeating}"
                              DockPanel.Dock="Left"/>
                </DockPanel>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type shortcut:LongPressShortcut}">
            <DockPanel LastChildFill="False">
                <DockPanel DockPanel.Dock="Top"
                           LastChildFill="False">
                    <TextBlock Text="Minimum duration:"
                               DockPanel.Dock="Left"
                               Margin="0 0 10 0"
                               VerticalAlignment="Center"
                               FontSize="12"/>

                    <metro:NumericUpDown Value="{Binding MinimumHoldDuration}"
                                         DockPanel.Dock="Left"
                                         Minimum="1"
                                         Width="120"
                                         StringFormat="{}{0}ms"
                                         VerticalAlignment="Center"/>
                </DockPanel>

                <DockPanel DockPanel.Dock="Top"
                           LastChildFill="False">
                    <TextBlock Text="Maximum duration:"
                               DockPanel.Dock="Left"
                               Margin="0 0 10 0"
                               VerticalAlignment="Center"
                               FontSize="12"/>

                    <metro:NumericUpDown Value="{Binding MaximumHoldDuration}"
                                         DockPanel.Dock="Left"
                                         Minimum="-1"
                                         Width="120"
                                         StringFormat="{}{0}ms"
                                         VerticalAlignment="Center"/>
                </DockPanel>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type shortcut:ClickShortcut}">
            <DockPanel LastChildFill="False">
                <DockPanel DockPanel.Dock="Top"
                           LastChildFill="False">
                    <TextBlock Text="Click count:"
                               DockPanel.Dock="Left"
                               Margin="0 0 10 0"
                               VerticalAlignment="Center"
                               FontSize="12"/>

                    <metro:NumericUpDown Value="{Binding ClickCount}"
                                         DockPanel.Dock="Left"
                                         Minimum="1"
                                         Width="80"
                                         VerticalAlignment="Center"/>

                </DockPanel>
                <DockPanel DockPanel.Dock="Top"
                           LastChildFill="False">
                    <TextBlock Text="Maximum click interval:"
                               DockPanel.Dock="Left"
                               Margin="0 0 10 0"
                               VerticalAlignment="Center"
                               FontSize="12"/>

                    <metro:NumericUpDown Value="{Binding MaximumClickInterval}"
                                         DockPanel.Dock="Left"
                                         Minimum="1"
                                         Width="150"
                                         StringFormat="{}{0}ms"
                                         VerticalAlignment="Center"/>
                </DockPanel>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type shortcut:DriveShortcut}">
            <DockPanel LastChildFill="False">
                <DockPanel DockPanel.Dock="Top"
                           LastChildFill="False">
                    <TextBlock Text="Mode:"
                               DockPanel.Dock="Left"
                               Margin="0 0 10 0"
                               VerticalAlignment="Center"
                               FontSize="12"/>

                    <ComboBox ItemsSource="{Binding Source={ui:EnumBindingSource {x:Type shortcut:DriveShortcutMode}}}"
                              SelectedItem="{Binding DriveMode}"
                              DockPanel.Dock="Left"
                              Width="150"
                              VerticalAlignment="Center"
                              FontSize="12"/>
                </DockPanel>
                <DockPanel DockPanel.Dock="Top"
                           LastChildFill="False">
                    <TextBlock Text="Invert:"
                               DockPanel.Dock="Left"
                               Margin="0 0 5 0"
                               VerticalAlignment="Center"
                               FontSize="12"/>

                    <CheckBox IsChecked="{Binding Invert}"
                              DockPanel.Dock="Left"/>
                </DockPanel>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type shortcut:ThresholdShortcut}">
            <DockPanel LastChildFill="False">
                <DockPanel DockPanel.Dock="Top"
                           LastChildFill="False">
                    <TextBlock Text="Trigger value:"
                               DockPanel.Dock="Left"
                               Margin="0 0 10 0"
                               VerticalAlignment="Center"
                               FontSize="12"/>

                    <metro:NumericUpDown Value="{Binding Threshold}"
                                         DockPanel.Dock="Left"
                                         Minimum="0"
                                         Maximum="1"
                                         Width="100"
                                         StringFormat="P0"
                                         VerticalAlignment="Center"/>

                </DockPanel>
                <DockPanel DockPanel.Dock="Top"
                           LastChildFill="False">
                    <TextBlock Text="Mode:"
                               DockPanel.Dock="Left"
                               Margin="0 0 10 0"
                               VerticalAlignment="Center"
                               FontSize="12"/>

                    <ComboBox ItemsSource="{Binding Source={ui:EnumBindingSource {x:Type shortcut:ThresholdTriggerMode}}}"
                              SelectedItem="{Binding TriggerMode}"
                              DockPanel.Dock="Left"
                              Width="100"
                              VerticalAlignment="Center"
                              FontSize="12"/>
                </DockPanel>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type shortcut:OffsetShortcut}">
            <DockPanel LastChildFill="False">
                <DockPanel DockPanel.Dock="Top"
                           LastChildFill="False">
                    <TextBlock Text="Mode:"
                               DockPanel.Dock="Left"
                               Margin="0 0 10 0"
                               VerticalAlignment="Center"
                               FontSize="12"/>

                    <ComboBox ItemsSource="{Binding Source={ui:EnumBindingSource {x:Type shortcut:OffsetShortcutMode}}}"
                              SelectedItem="{Binding OffsetMode}"
                              DockPanel.Dock="Left"
                              Width="130"
                              VerticalAlignment="Center"
                              FontSize="12"/>
                </DockPanel>
                <DockPanel DockPanel.Dock="Top"
                           LastChildFill="False">
                    <TextBlock Text="Speed:"
                               DockPanel.Dock="Left"
                               Margin="0 0 10 0"
                               VerticalAlignment="Center"
                               FontSize="12"/>

                    <metro:NumericUpDown Value="{Binding Speed}"
                                         DockPanel.Dock="Left"
                                         Minimum="0"
                                         Maximum="1"
                                         Width="100"
                                         StringFormat="P0"
                                         VerticalAlignment="Center"/>

                </DockPanel>
                <DockPanel DockPanel.Dock="Top"
                           LastChildFill="False">
                    <TextBlock Text="Invert:"
                               DockPanel.Dock="Left"
                               Margin="0 0 5 0"
                               VerticalAlignment="Center"
                               FontSize="12"/>

                    <CheckBox IsChecked="{Binding Invert}"
                              DockPanel.Dock="Left"/>
                </DockPanel>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type xinput:GamepadButtonGestureDescriptor}">
            <DockPanel LastChildFill="True">
                <TextBlock Text="User:"
                           Margin="0 0 0 0"
                           VerticalAlignment="Center"
                           FontSize="12"
                           Typography.Capitals="AllSmallCaps"/>
                    
                <TextBlock Text="{Binding UserIndex}"
                           Margin="5 0 0 0"
                           VerticalAlignment="Center"
                           FontSize="12"
                           FontWeight="Bold"
                           Typography.Capitals="AllSmallCaps"/>
                
                <TextBlock Text="Buttons:"
                           Margin="10 0 0 0"
                           VerticalAlignment="Center"
                           FontSize="12"
                           Typography.Capitals="AllSmallCaps"/>

                <ItemsControl DockPanel.Dock="Left"
                              Margin="5 0 0 0"
                              ItemsSource="{Binding Buttons}"
                              AlternationCount="{Binding RelativeSource={RelativeSource Self}, Path=Items.Count}"
                              VerticalAlignment="Center">
                    <ItemsControl.Resources>
                        <converters:GamepadKeyToStringConverter x:Key="GamepadKeyToStringConverter"/>
                    </ItemsControl.Resources>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock x:Name="Separator" Text=", "
                                           VerticalAlignment="Center"
                                           FontSize="12"
                                           FontWeight="Bold"
                                           Typography.Capitals="AllSmallCaps"/>
                                <TextBlock Text="{Binding Mode=OneWay, Converter={StaticResource GamepadKeyToStringConverter}}"
                                           VerticalAlignment="Center"
                                           FontSize="12"
                                           FontWeight="Bold"
                                           Typography.Capitals="AllSmallCaps"/>
                            </StackPanel>

                            <DataTemplate.Triggers>
                                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                    <Setter Property="Visibility" TargetName="Separator" Value="Collapsed" />
                                </Trigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type xinput:GamepadAxisGestureDescriptor}">
            <DockPanel LastChildFill="True">
                <TextBlock Text="Axis:"
                           Margin="0 0 5 0"
                           VerticalAlignment="Center"
                           FontSize="12"
                           Typography.Capitals="AllSmallCaps"/>

                <TextBlock Text="{Binding Axis, StringFormat={}{0}}"
                           VerticalAlignment="Center"
                           FontSize="12"
                           FontWeight="Bold"
                           Typography.Capitals="AllSmallCaps"/>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type tcode:TCodeButtonGestureDescriptor}">
            <DockPanel LastChildFill="True">
                <TextBlock Text="Button:"
                           Margin="0 0 5 0"
                           VerticalAlignment="Center"
                           FontSize="12"
                           Typography.Capitals="AllSmallCaps"/>

                <TextBlock Text="{Binding Button, StringFormat={}{0}}"
                           VerticalAlignment="Center"
                           FontSize="12"
                           FontWeight="Bold"
                           Typography.Capitals="AllSmallCaps"/>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type tcode:TCodeAxisGestureDescriptor}">
            <DockPanel LastChildFill="True">
                <TextBlock Text="Axis:"
                           Margin="0 0 5 0"
                           VerticalAlignment="Center"
                           FontSize="12"
                           Typography.Capitals="AllSmallCaps"/>

                <TextBlock Text="{Binding Axis, StringFormat={}{0}}"
                           VerticalAlignment="Center"
                           FontSize="12"
                           FontWeight="Bold"
                           Typography.Capitals="AllSmallCaps"/>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type rawinput:MouseButtonGestureDescriptor}">
            <DockPanel LastChildFill="True">
                <TextBlock Text="Button:"
                           Margin="0 0 5 0"
                           VerticalAlignment="Center"
                           FontSize="12"
                           Typography.Capitals="AllSmallCaps"/>

                <TextBlock Text="{Binding Button, StringFormat={}{0}}"
                           VerticalAlignment="Center"
                           FontSize="12"
                           FontWeight="Bold"
                           Typography.Capitals="AllSmallCaps"/>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type rawinput:MouseAxisGestureDescriptor}">
            <DockPanel LastChildFill="True">
                <TextBlock Text="Axis:"
                           Margin="0 0 5 0"
                           VerticalAlignment="Center"
                           FontSize="12"
                           Typography.Capitals="AllSmallCaps"/>

                <TextBlock Text="{Binding Axis, StringFormat={}{0}}"
                           VerticalAlignment="Center"
                           FontSize="12"
                           FontWeight="Bold"
                           Typography.Capitals="AllSmallCaps"/>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type rawinput:KeyboardGestureDescriptor}">
            <DockPanel LastChildFill="True">
                <TextBlock Text="Keys:"
                           Margin="0 0 5 0"
                           VerticalAlignment="Center"
                           FontSize="12"
                           Typography.Capitals="AllSmallCaps"/>

                <ItemsControl DockPanel.Dock="Left"
                              ItemsSource="{Binding Keys}"
                              AlternationCount="{Binding RelativeSource={RelativeSource Self}, Path=Items.Count}"
                              VerticalAlignment="Center">
                    <ItemsControl.Resources>
                        <converters:KeyToStringConverter x:Key="KeyToStringConverter"/>
                    </ItemsControl.Resources>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock x:Name="Separator" Text=", "
                                           VerticalAlignment="Center"
                                           FontSize="12"
                                           FontWeight="Bold"
                                           Typography.Capitals="AllSmallCaps"/>
                                <TextBlock Text="{Binding Mode=OneWay, Converter={StaticResource KeyToStringConverter}}"
                                           VerticalAlignment="Center"
                                           FontSize="12"
                                           FontWeight="Bold"
                                           Typography.Capitals="AllSmallCaps"/>
                            </StackPanel>

                            <DataTemplate.Triggers>
                                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                    <Setter Property="Visibility" TargetName="Separator" Value="Collapsed" />
                                </Trigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </DockPanel>
        </DataTemplate>
    </UserControl.Resources>

    <Grid Width="550" MinHeight="300" Height="750" Margin="20">
        <DockPanel LastChildFill="True">
            <material:Card DockPanel.Dock="Top"
                           material:ShadowAssist.ShadowDepth="Depth1"
                           IsEnabled="{Binding IsCapturingGestures, Converter={StaticResource NotConverter}}"
                           Margin="0 0 0 10">
                <DockPanel Margin="5">
                    <DockPanel DockPanel.Dock="Top"
                               LastChildFill="True">
                        <TextBlock DockPanel.Dock="Left"
                                   Text="Shortcut:"
                                   Margin="5 0 10 0"
                                   VerticalAlignment="Center"/>

                        <Button DockPanel.Dock="Right"
                                Style="{StaticResource MaterialDesignFlatButton}"
                                Click="{s:Action AddShortcut}"
                                Foreground="{DynamicResource MaterialDesignSuccessBrush}"
                                ToolTip="Add shortcut"
                                VerticalAlignment="Center"
                                Width="32" 
                                Height="32"
                                Margin="0" 
                                Padding="0">
                            <material:PackIcon Kind="Plus" Width="28" Height="28" />
                            <Button.IsEnabled>
                                <MultiBinding Converter="{StaticResource BooleanAndConverter}">
                                    <Binding Path="SelectedShortcutType" Converter="{StaticResource InvertedNullableToBooleanConverter}"/>
                                    <Binding Path="SelectedCapturedGesture" Converter="{StaticResource InvertedNullableToBooleanConverter}"/>
                                </MultiBinding>
                            </Button.IsEnabled>
                        </Button>

                        <ComboBox ItemsSource="{Binding ShortcutTypes}"
                                  SelectedItem="{Binding SelectedShortcutType}"
                                  material:TextFieldAssist.HasClearButton="True"
                                  DockPanel.Dock="Left"
                                  Margin="0 0 10 0">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={StaticResource DisplayNameConverter}}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </DockPanel>

                    <DockPanel LastChildFill="True"
                               DockPanel.Dock="Top"
                               IsEnabled="{Binding SelectedShortcutType, Converter={StaticResource InvertedNullableToBooleanConverter}}">
                        <material:PopupBox DockPanel.Dock="Right"
                                           Style="{StaticResource MaterialDesignToolBarPopupBox}"
                                           VerticalAlignment="Center"
                                           StaysOpen="True"
                                           PlacementMode="BottomAndAlignRightEdges"
                                           ToolTip="Filter"
                                           Height="32"
                                           Width="32">
                            <material:PopupBox.ToggleContent>
                                <material:PackIcon Kind="FormatListBulleted" 
                                                   Width="24" 
                                                   Height="24"/>
                            </material:PopupBox.ToggleContent>
                            <Grid Width="150" Margin="10">
                                <StackPanel>
                                    <StackPanel>
                                        <CheckBox IsChecked="{Binding IsKeyboardKeysGestureEnabled}" Content="Keyboard keys"/>
                                        <CheckBox IsChecked="{Binding IsMouseAxisGestureEnabled}" Content="Mouse axis"/>
                                        <CheckBox IsChecked="{Binding IsMouseButtonGestureEnabled}" Content="Mouse button"/>
                                        <CheckBox IsChecked="{Binding IsGamepadAxisGestureEnabled}" Content="Gamepad axis"/>
                                        <CheckBox IsChecked="{Binding IsGamepadButtonGestureEnabled}" Content="Gamepad button"/>
                                        <CheckBox IsChecked="{Binding IsTCodeAxisGestureEnabled}" Content="TCode axis"/>
                                        <CheckBox IsChecked="{Binding IsTCodeButtonGestureEnabled}" Content="TCode button"/>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </material:PopupBox>

                        <Button DockPanel.Dock="Right"
                                Style="{StaticResource MaterialDesignFlatButton}"
                                Click="{s:Action CaptureGestures}"
                                material:ButtonProgressAssist.IsIndeterminate="True"
                                material:ButtonProgressAssist.IsIndicatorVisible="{Binding IsCapturingGestures}"
                                ToolTip="Start capturing"
                                VerticalAlignment="Center"
                                Width="32" 
                                Height="32"
                                Margin="0" 
                                Padding="0">
                            <material:PackIcon Kind="Input" Width="28" Height="28" />
                        </Button>

                        <TextBlock DockPanel.Dock="Left"
                                   Text="Gesture:"
                                   Margin="5 0 14 0"
                                   VerticalAlignment="Center"/>

                        <ComboBox ItemsSource="{Binding CapturedGestures}"
                                  SelectedItem="{Binding SelectedCapturedGesture}"
                                  IsEnabled="{Binding CapturedGestures.Count, Mode=OneWay, Converter={StaticResource NotZeroConverter}}"
                                  material:TextFieldAssist.HasClearButton="True"
                                  Height="33"
                                  Margin="0 0 10 0">
                            <ComboBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource MaterialDesignComboBoxItemStyle}">
                                    <Setter Property="Padding" Value="5"/>
                                </Style>
                            </ComboBox.ItemContainerStyle>
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <material:Card material:ShadowAssist.ShadowDepth="Depth1">
                                        <StackPanel Orientation="Horizontal">
                                            <material:ColorZone Background="{Binding Converter={StaticResource GestureDescriptorToBrushConverter}}"
                                                                VerticalAlignment="Stretch"
                                                                HorizontalAlignment="Stretch"
                                                                CornerRadius="4 0 0 4"
                                                                Width="28"
                                                                Height="24">
                                                <material:PackIcon DockPanel.Dock="Left"
                                                                   Foreground="Black"
                                                                   Kind="{Binding Converter={StaticResource GestureDescriptorToPackIconConverter}}"
                                                                   VerticalAlignment="Center"
                                                                   HorizontalAlignment="Center"
                                                                   Width="24"
                                                                   Height="20"/>
                                            </material:ColorZone>
                                            
                                            <ContentControl Content="{Binding}"
                                                            Margin="5 0 0 0"/>
                                        </StackPanel>
                                    </material:Card>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </DockPanel>
                </DockPanel>
            </material:Card>

            <material:Card DockPanel.Dock="Bottom"
                           material:ShadowAssist.ShadowDepth="Depth1"
                           MaxHeight="350">
                <Expander DockPanel.Dock="Bottom"
                          Style="{StaticResource MaterialDesignToolBarExpander}"
                          Background="{DynamicResource MaterialDesignCardBackground}"
                          IsEnabled="{Binding SelectedShortcut, Converter={StaticResource InvertedNullableToBooleanConverter}}">
                    <Expander.Header>
                        <TabControl x:Name="HeaderTabControl"
                                    Style="{StaticResource MaterialDesignTabControl}"
                                    HorizontalContentAlignment="Left"
                                    material:ColorZoneAssist.Background="{DynamicResource MaterialDesignCardBackground}"
                                    material:ColorZoneAssist.Foreground="{DynamicResource PrimaryHueMidBrush}"
                                    material:ColorZoneAssist.Mode="Custom">
                            <TabItem Header="Actions" Width="100"/>
                            <TabItem Header="Settings" Width="100"/>
                        </TabControl>
                    </Expander.Header>

                    <Grid DockPanel.Dock="Top"
                          Height="300">
                        <DockPanel LastChildFill="True">
                            <DockPanel.Style>
                                <Style TargetType="{x:Type DockPanel}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedItem.Header, ElementName=HeaderTabControl}" Value="Settings">
                                            <DataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Style>

                            <DockPanel DockPanel.Dock="Top"
                                       LastChildFill="True"
                                       Margin="10 10 10 0">
                            <TextBlock Text="Name:"
                                   DockPanel.Dock="Left"
                                   Margin="0 0 10 0"
                                   VerticalAlignment="Center"
                                   FontSize="12"/>
                        
                            <TextBox Text="{Binding SelectedShortcut.Name}"
                                     DockPanel.Dock="Top"/>
                        </DockPanel>

                        <ContentControl Content="{Binding SelectedShortcut}"
                                            Margin="10"
                                            DockPanel.Dock="Top"/>
                        </DockPanel>

                        <DockPanel LastChildFill="True">
                            <DockPanel.Style>
                                <Style TargetType="{x:Type DockPanel}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedItem.Header, ElementName=HeaderTabControl}" Value="Actions">
                                            <DataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Style>

                            <ItemsControl DockPanel.Dock="Top"
                                          ItemsSource="{Binding SelectedShortcut.Configurations}"
                                          Margin="10 10 0 0"
                                          Height="100"
                                          MaxHeight="100"
                                          VirtualizingStackPanel.IsVirtualizing="True"
                                          VirtualizingStackPanel.VirtualizationMode="Recycling">
                                <ItemsControl.Template>
                                <ControlTemplate TargetType="ItemsControl">
                                    <ScrollViewer CanContentScroll="True" 
                                                  Focusable="False">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </ControlTemplate>
                            </ItemsControl.Template>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel IsVirtualizing="True"
                                                            VirtualizationMode="Recycling" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <DockPanel>
                                        <Button DockPanel.Dock="Right"   
                                                Style="{StaticResource MaterialDesignFlatButton}"
                                                Click="{s:Action RemoveAssignedAction}"
                                                ToolTip="Remove"
                                                material:RippleAssist.Feedback="{DynamicResource MaterialDesignErrorBrush}"
                                                Foreground="{DynamicResource MaterialDesignErrorBrush}"
                                                Margin="0 0 5 0"
                                                Height="24" 
                                                Width="24" 
                                                Padding="0">
                                            <material:PackIcon Kind="Delete"/>
                                        </Button>

                                        <Button DockPanel.Dock="Right"   
                                                Style="{StaticResource MaterialDesignFlatButton}"
                                                Click="{s:Action MoveAssignedActionUp}"
                                                ToolTip="Move Up"
                                                Height="24" 
                                                Width="24" 
                                                Padding="0">
                                            <material:PackIcon Kind="ArrowUp"/>
                                        </Button>
                                        <Button DockPanel.Dock="Right"   
                                                Style="{StaticResource MaterialDesignFlatButton}"
                                                Click="{s:Action MoveAssignedActionDown}"
                                                ToolTip="Move Down"
                                                Height="24" 
                                                Width="24" 
                                                Padding="0">
                                            <material:PackIcon Kind="ArrowDown"/>
                                        </Button>

                                        <Button DockPanel.Dock="Right"   
                                                Style="{StaticResource MaterialDesignFlatButton}"
                                                Click="{s:Action ConfigureAssignedAction}"
                                                Visibility="{Binding Settings.Count, Converter={StaticResource NotZeroToVisibilityConverter}}"
                                                ToolTip="Configure"
                                                Height="22" 
                                                Width="22" 
                                                Padding="0">
                                            <material:PackIcon Kind="Wrench" Width="14" Height="14"/>
                                        </Button>

                                        <TextBlock Text="{Binding DisplayName}"
                                                   VerticalAlignment="Center"
                                                   DockPanel.Dock="Left"
                                                   Margin="0"/>
                                    </DockPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                            <TextBox DockPanel.Dock="Top"
                                     Text="{Binding ActionsFilter, UpdateSourceTrigger=PropertyChanged, Delay=200}"
                                     Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                     Margin="10 0 10 0"
                                     material:HintAssist.Hint="Filter actions"/>

                            <ItemsControl DockPanel.Dock="Top"
                                          ItemsSource="{Binding AvailableActionsView}"
                                          Margin="10 10 0 0"
                                          MaxHeight="150"
                                          VirtualizingStackPanel.IsVirtualizing="True"
                                          VirtualizingStackPanel.VirtualizationMode="Recycling"
                                          ScrollViewer.VerticalScrollBarVisibility="Visible">
                            <ItemsControl.Template>
                                <ControlTemplate TargetType="ItemsControl">
                                    <ScrollViewer CanContentScroll="True" 
                                                  Focusable="False">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </ControlTemplate>
                            </ItemsControl.Template>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel IsVirtualizing="True"
                                                            VirtualizationMode="Recycling" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <DockPanel>
                                        <Button DockPanel.Dock="Right"   
                                                Style="{StaticResource MaterialDesignFlatButton}"
                                                Click="{s:Action AssignAction}"
                                                ToolTip="Assign action"
                                                Margin="0 0 5 0"
                                                Height="24" 
                                                Width="24" 
                                                Padding="0">
                                            <material:PackIcon Kind="Plus"/>
                                        </Button>

                                        <TextBlock Text="{Binding}"
                                                   DockPanel.Dock="Left"
                                                   VerticalAlignment="Center"
                                                   Margin="0"/>
                                    </DockPanel>
                                </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </DockPanel>
                    </Grid>
                </Expander>
            </material:Card>
            
            <material:Card material:ShadowAssist.ShadowDepth="Depth1"
                           Margin="0 0 0 10"
                           DockPanel.Dock="Top">
                <DockPanel LastChildFill="True">
                    <ListBox DockPanel.Dock="Top"
                             ItemsSource="{Binding Shortcuts}"
                             SelectedItem="{Binding SelectedShortcut}"
                             ScrollViewer.VerticalScrollBarVisibility="Visible"
                             ScrollViewer.CanContentScroll="False"
                             BorderBrush="Transparent"
                             Background="{DynamicResource MaterialDesignCardBackground}">
                        <ListBox.Resources>
                            <Style TargetType="{x:Type ListBoxItem}" x:Key="ContainerStyle">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListBoxItem">
                                            <material:Card Name="Container"
                                                           Margin="8 8 8 0"
                                                           material:ShadowAssist.ShadowDepth="Depth1"
                                                           Foreground="{DynamicResource MaterialDesignBody}">
                                                <ContentPresenter/>
                                            </material:Card>

                                            <ControlTemplate.Triggers>
                                                <DataTrigger Value="True">
                                                    <DataTrigger.Binding>
                                                        <MultiBinding Converter="{StaticResource MultiObjectEqualToBooleanConverter}">
                                                            <MultiBinding.Bindings>
                                                                <Binding RelativeSource="{RelativeSource Self}" Converter="{StaticResource ItemIndexInContainerConverter}"/>
                                                                <Binding Path="DataContext.Shortcuts.Count" 
                                                                         RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}"
                                                                         Converter="{StaticResource MathAddConverter}"
                                                                         ConverterParameter="-1"/>
                                                            </MultiBinding.Bindings>
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>

                                                    <DataTrigger.Setters>
                                                        <Setter Property="Margin" TargetName="Container" Value="8 8 8 8"/>
                                                    </DataTrigger.Setters>
                                                </DataTrigger>

                                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                    <Setter Property="Panel.Background" TargetName="Container" Value="{DynamicResource MaterialDesignCardBackgroundHover}"/>
                                                </Trigger>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Background" TargetName="Container" Value="{DynamicResource MaterialDesignCardBackgroundSelected}"/>
                                                    <Setter Property="material:ShadowAssist.ShadowDepth" TargetName="Container" Value="Depth2"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style TargetType="ListBox">
                                <Setter Property="ItemContainerStyle" Value="{StaticResource ContainerStyle}"/>
                            </Style>
                        </ListBox.Resources>

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border>
                                    <DockPanel LastChildFill="True">
                                        <Button DockPanel.Dock="Right"   
                                                Style="{StaticResource MaterialDesignFlatButton}"
                                                Click="{s:Action RemoveShortcut}"
                                                ToolTip="Remove"
                                                material:RippleAssist.Feedback="{DynamicResource MaterialDesignErrorBrush}"
                                                Foreground="{DynamicResource MaterialDesignErrorBrush}"
                                                Margin="0 0 5 0"
                                                Height="24" 
                                                Width="24" 
                                                Padding="0">
                                            <material:PackIcon Kind="Delete"/>
                                        </Button>

                                        <ToggleButton IsChecked="{Binding Enabled}"
                                                        DockPanel.Dock="Right"
                                                        Height="14">
                                            <ToggleButton.Resources>
                                                <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaterialDesignSwitchToggleButton}">
                                                    <Setter Property="ToolTip" Value="Enable"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter Property="ToolTip" Value="Disable"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ToggleButton.Resources>
                                        </ToggleButton>

                                        <TextBlock Text="{Binding Configurations.Count, StringFormat=Actions: {0}}"
                                                   DockPanel.Dock="Right"
                                                   VerticalAlignment="Center"
                                                   Margin="5 0 10 0"
                                                   FontWeight="Medium"
                                                   Typography.Capitals="AllSmallCaps"/>

                                        <material:ColorZone Background="{Binding Gesture, Converter={StaticResource GestureDescriptorToBrushConverter}}"
                                                            VerticalAlignment="Stretch"
                                                            HorizontalAlignment="Stretch"
                                                            CornerRadius="4 0 0 4"
                                                            Width="34"
                                                            Height="30">
                                            <material:PackIcon DockPanel.Dock="Left"
                                                               Foreground="Black"
                                                               Kind="{Binding Gesture, Converter={StaticResource GestureDescriptorToPackIconConverter}}"
                                                               VerticalAlignment="Center"
                                                               HorizontalAlignment="Center"
                                                               Width="28"
                                                               Height="24"/>
                                        </material:ColorZone>

                                        <StackPanel Orientation="Vertical"
                                                    Margin="5 0 0 0"
                                                    Height="24">
                                            <StackPanel Orientation="Horizontal"
                                                        Margin="0 -2 0 0">
                                                <TextBlock Text="{Binding Converter={StaticResource DisplayNameConverter}}"
                                                           VerticalAlignment="Center"
                                                           FontSize="11"
                                                           FontWeight="Medium"
                                                           Typography.Capitals="AllSmallCaps"/>

                                                <TextBlock Text=":"
                                                           Visibility="{Binding Name, Converter={StaticResource NullableToVisibilityConverter}}"
                                                           VerticalAlignment="Center"
                                                           FontSize="11"
                                                           FontWeight="Bold"
                                                           Typography.Capitals="AllSmallCaps"
                                                           Margin="0 0 5 0"/>

                                                <TextBlock Text="{Binding Name}"
                                                           Visibility="{Binding Name, Converter={StaticResource NullableToVisibilityConverter}}"
                                                           VerticalAlignment="Center"
                                                           FontSize="11"
                                                           FontWeight="Bold"
                                                           Typography.Capitals="AllSmallCaps"/>
                                            </StackPanel>

                                            <ContentControl Content="{Binding Gesture}"
                                                            VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </DockPanel>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </material:Card>
        </DockPanel>
    </Grid>
</UserControl>
