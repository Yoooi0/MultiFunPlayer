<UserControl x:Class="MultiFunPlayer.UI.Controls.MarkersPreview"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:MultiFunPlayer.UI.Controls"
             xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:s="https://github.com/canton7/Stylet"
             d:DesignHeight="450"
             d:DesignWidth="800"
             x:ClassModifier="internal"
             SizeChanged="OnSizeChanged"
             mc:Ignorable="d">
    <material:Card s:View.ActionTarget="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" material:ShadowAssist.ShadowDepth="Depth1">
        <material:Card.Background>
            <DrawingBrush Stretch="None"
                          TileMode="Tile"
                          Viewport="4 0 20 20"
                          ViewportUnits="Absolute">
                <DrawingBrush.Drawing>
                    <DrawingGroup>
                        <GeometryDrawing Brush="{DynamicResource MaterialDesignPrimaryCheckerboxBrush}">
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry Rect="0 0 20 20"/>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>

                        <GeometryDrawing Brush="{DynamicResource MaterialDesignSecondaryCheckerboxBrush}">
                            <GeometryDrawing.Geometry>
                                <GeometryGroup>
                                    <RectangleGeometry Rect="0 0 10 10"/>
                                    <RectangleGeometry Rect="10 10 10 10"/>
                                </GeometryGroup>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup>
                </DrawingBrush.Drawing>
            </DrawingBrush>
        </material:Card.Background>

        <Grid>
            <local:AutoClosingPopup AllowsTransparency="True"
                                    IsOpen="{Binding ToolTipIsOpen, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                    Placement="Center"
                                    PlacementTarget="{Binding ToolTipTarget, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                    VerticalOffset="-40">
                <material:Card Margin="10"
                               Padding="5"
                               material:ShadowAssist.ShadowDepth="Depth2">
                    <ContentControl Content="{Binding ToolTipContent, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                        <ContentControl.Resources>
                            <DataTemplate DataType="{x:Type local:ChapterToolTipModel}">
                                <StackPanel>
                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                        <TextBlock Margin="0 0 5 0" Text="Chapter:"/>
                                        <TextBlock FontWeight="Bold" Text="{Binding Name}"/>
                                    </StackPanel>

                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                        <TextBlock Text="{Binding StartPosition, StringFormat={}{0:hh\\:mm\\:ss\\.fff}}"/>
                                        <TextBlock Margin="5 0 5 0" Text="-"/>
                                        <TextBlock Text="{Binding EndPosition, StringFormat={}{0:hh\\:mm\\:ss\\.fff}}"/>
                                    </StackPanel>
                                </StackPanel>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type local:MarkerToolTipModel}">
                                <StackPanel>
                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                        <TextBlock Text="{Binding MarkerType}"/>
                                        <TextBlock Margin="0 0 5 0" Text=":"/>
                                        <TextBlock FontWeight="Bold" Text="{Binding Name}"/>
                                    </StackPanel>

                                    <TextBlock HorizontalAlignment="Center" Text="{Binding Position, StringFormat={}{0:hh\\:mm\\:ss\\.fff}}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ContentControl.Resources>
                    </ContentControl>
                </material:Card>
            </local:AutoClosingPopup>

            <ItemsControl ItemsSource="{Binding ChapterModels, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                <ItemsControl.Resources>
                    <Style x:Key="ChapterButton" TargetType="{x:Type ButtonBase}">
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                    <Grid>
                                        <Border x:Name="border"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="0"
                                                Opacity="1"
                                                Visibility="Hidden"/>

                                        <material:Ripple Focusable="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="border" Property="Visibility" Value="Visible"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ItemsControl.Resources>

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid s:View.ActionTarget="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                              MouseEnter="{s:Action OnChapterMouseEnter}"
                              MouseLeave="{s:Action OnChapterMouseLeave}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="6"/>
                                <ColumnDefinition Width="{Binding CanvasLength, Converter={StaticResource MathAddConverter}, ConverterParameter=-12}"/>
                                <ColumnDefinition Width="6"/>
                            </Grid.ColumnDefinitions>

                            <Rectangle Grid.Column="0"
                                       Grid.ColumnSpan="3"
                                       Height="{Binding ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                       MouseEnter="{s:Action OnChapterMiddleMouseEnter}"
                                       MouseLeave="{s:Action OnChapterMiddleMouseLeave}"
                                       Stroke="{DynamicResource MaterialDesignBody}"
                                       StrokeThickness="0.5">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{Binding Color}"/>
                                </Rectangle.Fill>
                            </Rectangle>

                            <Button Grid.Column="0"
                                    Style="{StaticResource ChapterButton}"
                                    BorderBrush="{DynamicResource MaterialDesignBody}"
                                    BorderThickness="3 0 0 0"
                                    Click="{s:Action OnChapterStartClick}"
                                    MouseEnter="{s:Action OnChapterStartMouseEnter}"
                                    MouseLeave="{s:Action OnChapterStartMouseLeave}"/>

                            <Button Grid.Column="2"
                                    Style="{StaticResource ChapterButton}"
                                    BorderBrush="{DynamicResource MaterialDesignBody}"
                                    BorderThickness="0 0 3 0"
                                    Click="{s:Action OnChapterEndClick}"
                                    MouseEnter="{s:Action OnChapterEndMouseEnter}"
                                    MouseLeave="{s:Action OnChapterEndMouseLeave}"/>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>

                <ItemsControl.ItemContainerStyle>
                    <Style>
                        <Setter Property="Canvas.Left" Value="{Binding CanvasLeft}"/>
                        <Setter Property="Canvas.Top" Value="0"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>

            <ItemsControl ItemsSource="{Binding BookmarkModels, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                <ItemsControl.Resources>
                    <Style x:Key="BookmarkButton" TargetType="{x:Type ButtonBase}">
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                    <Grid>
                                        <Border x:Name="border"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="0"
                                                Opacity="0.56"/>

                                        <material:Ripple Focusable="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="border" Property="Opacity" Value="1"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ItemsControl.Resources>

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border s:View.ActionTarget="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                Width="7"
                                Height="{Binding ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                MouseEnter="{s:Action OnBookmarkMouseEnter}"
                                MouseLeave="{s:Action OnBookmarkMouseLeave}"
                                SnapsToDevicePixels="True">
                            <Button Style="{StaticResource BookmarkButton}"
                                    HorizontalAlignment="Stretch"
                                    Background="{DynamicResource MaterialDesignBody}"
                                    BorderBrush="Transparent"
                                    BorderThickness="2 0 2 0"
                                    Click="{s:Action OnBookmarkClick}"/>
                            <Border.RenderTransform>
                                <TranslateTransform X="-3"/>
                            </Border.RenderTransform>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>

                <ItemsControl.ItemContainerStyle>
                    <Style>
                        <Setter Property="Canvas.Left" Value="{Binding CanvasLeft}"/>
                        <Setter Property="Canvas.Top" Value="0"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>

            <Canvas ClipToBounds="True" IsHitTestVisible="False">
                <Border Canvas.Left="{Binding ScrubberPosition, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                        Width="4"
                        Height="{Binding ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                        Background="{DynamicResource MaterialDesignCardBackground}"
                        BorderBrush="{DynamicResource MaterialDesignBody}"
                        BorderThickness="1 0 1 0"
                        SnapsToDevicePixels="True"
                        Visibility="{Binding ShowScrubber, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                    <Border.RenderTransform>
                        <TranslateTransform X="-2"/>
                    </Border.RenderTransform>
                </Border>
            </Canvas>
        </Grid>
    </material:Card>
</UserControl>
