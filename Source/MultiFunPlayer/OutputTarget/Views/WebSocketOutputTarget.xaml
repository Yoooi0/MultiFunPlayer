<UserControl x:Class="MultiFunPlayer.OutputTarget.Views.WebSocketOutputTarget"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:MultiFunPlayer.UI.Controls"
             xmlns:converters="clr-namespace:MultiFunPlayer.UI.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:s="https://github.com/canton7/Stylet"
             d:DesignHeight="450"
             d:DesignWidth="800"
             x:ClassModifier="internal"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="UpdateContextTemplates.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:MultiDictionaryKeyToValueConverter x:Key="MultiDictionaryKeyToValueConverter"/>
            <converters:AutoToolTipValueToPercentConverter x:Key="AutoToolTipValueToPercentConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <Expander Style="{StaticResource MaterialDesignToolBarExpander}"
              material:ExpanderAssist.HorizontalHeaderPadding="0 0 6 0"
              Background="{DynamicResource MaterialDesignToolBarBackground}"
              IsExpanded="{Binding DataContext.ContentVisible, RelativeSource={RelativeSource FindAncestor, AncestorLevel=2, AncestorType={x:Type UserControl}}}">
        <Expander.Header>
            <DockPanel Height="36" LastChildFill="False">
                <Button s:View.ActionTarget="{Binding DataContext.Parent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                        DockPanel.Dock="Left"
                        material:ButtonProgressAssist.IsIndeterminate="True"
                        material:ButtonProgressAssist.IsIndicatorVisible="{Binding IsConnectBusy}"
                        material:ButtonProgressAssist.Value="-1"
                        Command="{s:Action ToggleConnectAsync}"
                        CommandParameter="{Binding}"
                        IsEnabled="{Binding CanToggleConnect}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignProgressToolBarButton}" TargetType="{x:Type ButtonBase}">
                            <Setter Property="ToolTip" Value="Connect"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                    <Setter Property="ToolTip" Value="Disconnect"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <material:PackIcon Width="19" Height="19">
                        <material:PackIcon.Style>
                            <Style BasedOn="{StaticResource {x:Type material:PackIcon}}" TargetType="material:PackIcon">
                                <Setter Property="Kind" Value="Play"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                        <Setter Property="Kind" Value="Stop"/>
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                     From="0"
                                                                     To="1"
                                                                     Duration="0:0:0.8"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </material:PackIcon.Style>
                    </material:PackIcon>
                </Button>

                <ToggleButton DockPanel.Dock="Left"
                              Style="{StaticResource MaterialDesignToolBarToggleButton}"
                              IsChecked="{Binding AutoConnectEnabled}"
                              ToolTip="Auto-connect">
                    <material:PackIcon Width="20"
                                       Height="20"
                                       Kind="MotionPlayOutline"
                                       Opacity=".56"/>
                    <material:ToggleButtonAssist.OnContent>
                        <material:PackIcon Width="20"
                                           Height="20"
                                           Kind="MotionPlayOutline"/>
                    </material:ToggleButtonAssist.OnContent>
                </ToggleButton>

                <material:PopupBox DockPanel.Dock="Right"
                                   Style="{StaticResource MaterialDesignToolBarPopupBox}"
                                   PlacementMode="BottomAndAlignRightEdges"
                                   StaysOpen="True"
                                   ToolTip="Update settings">
                    <material:PopupBox.ToggleContent>
                        <material:PackIcon Width="20"
                                           Height="20"
                                           Kind="TimerCogOutline"/>
                    </material:PopupBox.ToggleContent>
                    <StackPanel Width="250" Margin="10 0 10 0">
                        <DockPanel>
                            <TextBlock DockPanel.Dock="Left"
                                       Margin="0 0 10 0"
                                       VerticalAlignment="Center"
                                       FontWeight="Bold"
                                       Text="Update type:"/>

                            <ComboBox DockPanel.Dock="Left"
                                      ItemsSource="{Binding AvailableUpdateTypes}"
                                      SelectedItem="{Binding UpdateType}"
                                      Margin="0 3 10 0"
                                      Padding="0"
                                      VerticalAlignment="Center"
                                      material:TextFieldAssist.DecorationVisibility="Hidden"
                                      IsEnabled="{Binding CanChangeUpdateType}"/>
                        </DockPanel>

                        <Separator/>

                        <ContentControl>
                            <ContentControl.Content>
                                <MultiBinding Converter="{StaticResource MultiDictionaryKeyToValueConverter}">
                                    <Binding Path="UpdateContexts"/>
                                    <Binding Path="UpdateType"/>
                                </MultiBinding>
                            </ContentControl.Content>
                        </ContentControl>
                    </StackPanel>
                </material:PopupBox>
            </DockPanel>
        </Expander.Header>

        <StackPanel Margin="20">
            <DockPanel Margin="0 0 0 20" LastChildFill="True">
                <DockPanel DockPanel.Dock="Left"
                           IsEnabled="{Binding IsDisconnected}"
                           LastChildFill="False">
                    <TextBlock DockPanel.Dock="Left"
                               Margin="0 0 10 0"
                               VerticalAlignment="Center"
                               Text="Endpoint:"/>

                    <controls:UriBox DockPanel.Dock="Left"
                                     VerticalAlignment="Center"
                                     Schemes="ws wss"
                                     ShowPathAndQuery="True"
                                     Uri="{Binding Uri}"/>
                </DockPanel>
            </DockPanel>

            <TextBlock HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       FontWeight="Bold"
                       Text="Output Range"
                       Typography.Capitals="AllSmallCaps"/>
            <ItemsControl ItemsSource="{Binding AxisSettings}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Margin="0 0 -13 0"
                                     Columns="3"
                                     IsItemsHost="True"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <DockPanel Margin="0 0 20 1" LastChildFill="True">
                            <ToggleButton DockPanel.Dock="Left"
                                          Width="20"
                                          Height="14"
                                          Padding="0"
                                          VerticalAlignment="Center"
                                          IsChecked="{Binding Value.Enabled}">
                                <ToggleButton.Resources>
                                    <Style BasedOn="{StaticResource MaterialDesignPaperButton}" TargetType="{x:Type ToggleButton}">
                                        <Setter Property="material:ElevationAssist.Elevation" Value="Dp0"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                                <Setter Property="material:RippleAssist.Feedback" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Resources>

                                <TextBlock FontSize="10"
                                           FontWeight="Bold"
                                           Text="{Binding Key}"/>
                            </ToggleButton>

                            <Canvas DockPanel.Dock="Right" HorizontalAlignment="Stretch">
                                <metro:RangeSlider Style="{StaticResource MaterialDesignCompactRangeSlider}"
                                                   Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type Canvas}}}"
                                                   AutoToolTipPlacement="TopLeft"
                                                   AutoToolTipPrecision="2"
                                                   IsEnabled="{Binding Value.Enabled}"
                                                   LowerValue="{Binding Value.Minimum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                   Maximum="1.00"
                                                   MinRange="0.01"
                                                   MinRangeWidth="10"
                                                   Minimum="0.00"
                                                   UpperValue="{Binding Value.Maximum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                   UseLayoutRounding="False">
                                    <metro:RangeSlider.AutoToolTipLowerValueTemplate>
                                        <DataTemplate>
                                            <TextBlock HorizontalAlignment="Right" Text="{Binding Converter={StaticResource AutoToolTipValueToPercentConverter}}"/>
                                        </DataTemplate>
                                    </metro:RangeSlider.AutoToolTipLowerValueTemplate>
                                    <metro:RangeSlider.AutoToolTipUpperValueTemplate>
                                        <DataTemplate>
                                            <TextBlock HorizontalAlignment="Right" Text="{Binding Converter={StaticResource AutoToolTipValueToPercentConverter}}"/>
                                        </DataTemplate>
                                    </metro:RangeSlider.AutoToolTipUpperValueTemplate>
                                    <metro:RangeSlider.AutoToolTipRangeValuesTemplate>
                                        <DataTemplate DataType="{x:Type metro:RangeSliderAutoTooltipValues}">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding LowerValue, Converter={StaticResource AutoToolTipValueToPercentConverter}}"/>
                                                <TextBlock Text=" - "/>
                                                <TextBlock Text="{Binding UpperValue, Converter={StaticResource AutoToolTipValueToPercentConverter}}"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </metro:RangeSlider.AutoToolTipRangeValuesTemplate>
                                </metro:RangeSlider>
                            </Canvas>
                        </DockPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
    </Expander>
</UserControl>