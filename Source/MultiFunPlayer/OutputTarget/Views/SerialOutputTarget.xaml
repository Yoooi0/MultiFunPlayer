<UserControl x:Class="MultiFunPlayer.OutputTarget.Views.SerialOutputTarget"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:MultiFunPlayer.UI.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:ports="clr-namespace:System.IO.Ports;assembly=System"
             xmlns:s="https://github.com/canton7/Stylet"
             xmlns:ui="clr-namespace:MultiFunPlayer.UI"
             d:DesignHeight="450"
             d:DesignWidth="800"
             x:ClassModifier="internal"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="UpdateContextTemplates.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converters:MultiDictionaryKeyToValueConverter x:Key="MultiDictionaryKeyToValueConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <Expander Style="{StaticResource MaterialDesignToolBarExpander}"
              material:ExpanderAssist.HorizontalHeaderPadding="0 0 6 0"
              Background="{DynamicResource MaterialDesignToolBarBackground}"
              IsExpanded="{Binding DataContext.ContentVisible, RelativeSource={RelativeSource FindAncestor, AncestorLevel=2, AncestorType={x:Type UserControl}}}">
        <Expander.Header>
            <DockPanel Height="36" LastChildFill="False">
                <Button s:View.ActionTarget="{Binding DataContext.Parent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                        DockPanel.Dock="Left"
                        material:ButtonProgressAssist.IsIndeterminate="True"
                        material:ButtonProgressAssist.IsIndicatorVisible="{Binding IsConnectBusy}"
                        material:ButtonProgressAssist.Value="-1"
                        Command="{s:Action ToggleConnectAsync}"
                        CommandParameter="{Binding}"
                        IsEnabled="{Binding CanToggleConnect}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignProgressToolBarButton}" TargetType="{x:Type ButtonBase}">
                            <Setter Property="ToolTip" Value="Connect"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                    <Setter Property="ToolTip" Value="Disconnect"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <material:PackIcon Width="19" Height="19">
                        <material:PackIcon.Style>
                            <Style BasedOn="{StaticResource {x:Type material:PackIcon}}" TargetType="material:PackIcon">
                                <Setter Property="Kind" Value="Play"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                        <Setter Property="Kind" Value="Stop"/>
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                     From="0"
                                                                     To="1"
                                                                     Duration="0:0:0.8"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </material:PackIcon.Style>
                    </material:PackIcon>
                </Button>

                <ToggleButton DockPanel.Dock="Left"
                              Style="{StaticResource MaterialDesignToolBarToggleButton}"
                              IsChecked="{Binding AutoConnectEnabled}"
                              ToolTip="Auto-connect">
                    <material:PackIcon Width="20"
                                       Height="20"
                                       Kind="MotionPlayOutline"
                                       Opacity=".56"/>
                    <material:ToggleButtonAssist.OnContent>
                        <material:PackIcon Width="20"
                                           Height="20"
                                           Kind="MotionPlayOutline"/>
                    </material:ToggleButtonAssist.OnContent>
                </ToggleButton>

                <material:PopupBox DockPanel.Dock="Right"
                                   Style="{StaticResource MaterialDesignToolBarPopupBox}"
                                   PlacementMode="BottomAndAlignRightEdges"
                                   StaysOpen="True"
                                   ToolTip="Update settings">
                    <material:PopupBox.ToggleContent>
                        <material:PackIcon Width="20"
                                           Height="20"
                                           Kind="TimerCogOutline"/>
                    </material:PopupBox.ToggleContent>
                    <StackPanel Width="250" Margin="10 0 10 0">
                        <DockPanel>
                            <TextBlock DockPanel.Dock="Left"
                                       Margin="0 0 10 0"
                                       VerticalAlignment="Center"
                                       FontWeight="Bold"
                                       Text="Update type:"/>

                            <ComboBox DockPanel.Dock="Left"
                                      ItemsSource="{Binding AvailableUpdateTypes}"
                                      SelectedItem="{Binding UpdateType}"
                                      Margin="0 3 10 0"
                                      Padding="0"
                                      VerticalAlignment="Center"
                                      material:TextFieldAssist.DecorationVisibility="Hidden"
                                      IsEnabled="{Binding CanChangeUpdateType}"/>
                        </DockPanel>

                        <Separator/>

                        <ContentControl>
                            <ContentControl.Content>
                                <MultiBinding Converter="{StaticResource MultiDictionaryKeyToValueConverter}">
                                    <Binding Path="UpdateContexts"/>
                                    <Binding Path="UpdateType"/>
                                </MultiBinding>
                            </ContentControl.Content>
                        </ContentControl>
                    </StackPanel>
                </material:PopupBox>
            </DockPanel>
        </Expander.Header>

        <StackPanel Margin="20">
            <DockPanel Margin="0 0 0 20" LastChildFill="True">
                <DockPanel DockPanel.Dock="Left"
                           VerticalAlignment="Center"
                           LastChildFill="False">
                    <DockPanel.Resources>
                        <Style TargetType="{x:Type DockPanel}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Status}" Value="Disconnected">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DockPanel.Resources>

                    <ComboBox DockPanel.Dock="Left"
                              Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                              ItemsSource="{Binding SerialPorts}"
                              SelectedItem="{Binding SelectedSerialPort}"
                              Width="150"
                              Margin="0 -12 10 0"
                              VerticalAlignment="Center"
                              material:HintAssist.Hint="serial port"
                              material:TextFieldAssist.HasClearButton="True"
                              IsEnabled="{Binding CanChangePort}">
                        <ComboBox.ItemContainerStyle>
                            <Style BasedOn="{StaticResource MaterialDesignComboBoxItemStyle}" TargetType="ComboBoxItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ComboBox.ItemContainerStyle>
                        <ComboBox.ItemTemplateSelector>
                            <ui:ComboBoxTemplateSelector>
                                <ui:ComboBoxTemplateSelector.DropdownItemsTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <TextBlock FontWeight="Bold" Text="{Binding Name}"/>
                                            <TextBlock FontSize="10"
                                                       Text="{Binding Manufacturer}"
                                                       Typography.Capitals="AllSmallCaps"/>
                                            <TextBlock FontSize="10"
                                                       Text="{Binding DeviceID}"
                                                       Typography.Capitals="AllSmallCaps"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ui:ComboBoxTemplateSelector.DropdownItemsTemplate>
                                <ui:ComboBoxTemplateSelector.SelectedItemTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <TextBlock Text="{Binding PortName}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ui:ComboBoxTemplateSelector.SelectedItemTemplate>
                            </ui:ComboBoxTemplateSelector>
                        </ComboBox.ItemTemplateSelector>
                    </ComboBox>

                    <Button DockPanel.Dock="Left"
                            Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                            Width="20"
                            Height="20"
                            Margin="0 1 3 0"
                            VerticalAlignment="Center"
                            material:ButtonProgressAssist.IsIndeterminate="True"
                            material:ButtonProgressAssist.IsIndicatorVisible="{Binding IsRefreshBusy}"
                            material:ButtonProgressAssist.Value="-1"
                            Command="{s:Action RefreshPorts}"
                            IsEnabled="{Binding CanRefreshPorts}"
                            ToolTip="Refresh">
                        <material:PackIcon Width="16"
                                           Height="16"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Kind="Refresh"/>
                    </Button>

                    <material:PopupBox VerticalAlignment="Center"
                                       PlacementMode="TopAndAlignRightEdges"
                                       PopupMode="Click"
                                       StaysOpen="True"
                                       ToolTip="Advanced settings">
                        <StackPanel Margin="10">
                            <DockPanel HorizontalAlignment="Left">
                                <TextBlock DockPanel.Dock="Left"
                                           Margin="0 0 10 0"
                                           VerticalAlignment="Center"
                                           Text="Baud rate:"/>
                                <ComboBox DockPanel.Dock="Right"
                                          ItemsSource="{Binding AvailableBaudRates}"
                                          SelectedItem="{Binding BaudRate}"/>
                            </DockPanel>

                            <DockPanel HorizontalAlignment="Left">
                                <TextBlock DockPanel.Dock="Left"
                                           Margin="0 0 10 0"
                                           VerticalAlignment="Center"
                                           Text="Parity:"/>
                                <ComboBox DockPanel.Dock="Right"
                                          ItemsSource="{Binding Source={ui:EnumBindingSource {x:Type ports:Parity}}}"
                                          SelectedItem="{Binding Parity}"/>
                            </DockPanel>

                            <DockPanel HorizontalAlignment="Left">
                                <TextBlock DockPanel.Dock="Left"
                                           Margin="0 0 10 0"
                                           VerticalAlignment="Center"
                                           Text="Stop bits:"/>
                                <ComboBox DockPanel.Dock="Right"
                                          ItemsSource="{Binding Source={ui:EnumBindingSource {x:Type ports:StopBits}}}"
                                          SelectedItem="{Binding StopBits}"/>
                            </DockPanel>

                            <DockPanel HorizontalAlignment="Left">
                                <TextBlock DockPanel.Dock="Left"
                                           Margin="0 0 10 0"
                                           VerticalAlignment="Center"
                                           Text="Data bits:"/>
                                <metro:NumericUpDown DockPanel.Dock="Right"
                                                     HideUpDownButtons="True"
                                                     Maximum="8"
                                                     Minimum="5"
                                                     Value="{Binding DataBits}"/>
                            </DockPanel>

                            <DockPanel HorizontalAlignment="Left">
                                <TextBlock DockPanel.Dock="Left"
                                           Margin="0 0 10 0"
                                           VerticalAlignment="Center"
                                           Text="Handshake:"/>
                                <ComboBox DockPanel.Dock="Right"
                                          ItemsSource="{Binding Source={ui:EnumBindingSource {x:Type ports:Handshake}}}"
                                          SelectedItem="{Binding Handshake}"/>
                            </DockPanel>

                            <DockPanel HorizontalAlignment="Left">
                                <TextBlock DockPanel.Dock="Left"
                                           Width="75"
                                           Margin="0 5 0 5"
                                           VerticalAlignment="Center"
                                           Text="Enable DTR:"/>
                                <ToggleButton DockPanel.Dock="Right"
                                              Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                              IsChecked="{Binding DtrEnable}"/>
                            </DockPanel>

                            <DockPanel HorizontalAlignment="Left">
                                <TextBlock DockPanel.Dock="Left"
                                           Width="75"
                                           Margin="0 5 0 5"
                                           VerticalAlignment="Center"
                                           Text="Enable RTS:"/>
                                <ToggleButton DockPanel.Dock="Right"
                                              Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                              IsChecked="{Binding RtsEnable}"/>
                            </DockPanel>

                            <DockPanel HorizontalAlignment="Left">
                                <TextBlock DockPanel.Dock="Left"
                                           Margin="0 0 10 0"
                                           VerticalAlignment="Center"
                                           Text="Read timeout:"/>
                                <metro:NumericUpDown DockPanel.Dock="Right"
                                                     HideUpDownButtons="True"
                                                     Minimum="-1"
                                                     StringFormat="{}{0} ms"
                                                     Value="{Binding ReadTimeout}"/>
                            </DockPanel>

                            <DockPanel HorizontalAlignment="Left">
                                <TextBlock DockPanel.Dock="Left"
                                           Margin="0 0 10 0"
                                           VerticalAlignment="Center"
                                           Text="Write timeout:"/>
                                <metro:NumericUpDown DockPanel.Dock="Right"
                                                     HideUpDownButtons="True"
                                                     Minimum="-1"
                                                     StringFormat="{}{0} ms"
                                                     Value="{Binding WriteTimeout}"/>
                            </DockPanel>

                            <DockPanel HorizontalAlignment="Left">
                                <TextBlock DockPanel.Dock="Left"
                                           Margin="0 0 10 0"
                                           VerticalAlignment="Center"
                                           Text="Read buffer size:"/>
                                <metro:NumericUpDown DockPanel.Dock="Right"
                                                     HideUpDownButtons="True"
                                                     Minimum="2"
                                                     Value="{Binding ReadBufferSize}"/>
                            </DockPanel>

                            <DockPanel HorizontalAlignment="Left">
                                <TextBlock DockPanel.Dock="Left"
                                           Margin="0 0 10 0"
                                           VerticalAlignment="Center"
                                           Text="Write buffer size:"/>
                                <metro:NumericUpDown DockPanel.Dock="Right"
                                                     HideUpDownButtons="True"
                                                     Minimum="2"
                                                     Value="{Binding WriteBufferSize}"/>
                            </DockPanel>
                        </StackPanel>

                        <material:PopupBox.ToggleContent>
                            <material:ColorZone Width="20"
                                                Height="20"
                                                material:ShadowAssist.ShadowDepth="Depth2"
                                                CornerRadius="10"
                                                Mode="PrimaryMid">
                                <material:PackIcon Width="16"
                                                   Height="16"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   Kind="Cog"/>
                            </material:ColorZone>
                        </material:PopupBox.ToggleContent>
                    </material:PopupBox>
                </DockPanel>
            </DockPanel>

            <TextBlock HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       FontWeight="Bold"
                       Text="Output Range"
                       Typography.Capitals="AllSmallCaps"/>
            <ItemsControl ItemsSource="{Binding AxisSettings}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Margin="0 0 -13 0"
                                     Columns="3"
                                     IsItemsHost="True"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <DockPanel Margin="0 0 20 1" LastChildFill="True">
                            <ToggleButton DockPanel.Dock="Left"
                                          Width="20"
                                          Height="14"
                                          Padding="0"
                                          VerticalAlignment="Center"
                                          IsChecked="{Binding Value.Enabled}">
                                <ToggleButton.Resources>
                                    <Style BasedOn="{StaticResource MaterialDesignPaperButton}" TargetType="{x:Type ToggleButton}">
                                        <Setter Property="material:ElevationAssist.Elevation" Value="Dp0"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                                <Setter Property="material:RippleAssist.Feedback" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Resources>

                                <TextBlock FontSize="10"
                                           FontWeight="Bold"
                                           Text="{Binding Key}"/>
                            </ToggleButton>

                            <Canvas DockPanel.Dock="Right" HorizontalAlignment="Stretch">
                                <metro:RangeSlider Style="{StaticResource MaterialDesignCompactRangeSlider}"
                                                   Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type Canvas}}}"
                                                   AutoToolTipPlacement="TopLeft"
                                                   IsEnabled="{Binding Value.Enabled}"
                                                   LowerValue="{Binding Value.Minimum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                   Maximum="100"
                                                   MinRange="1"
                                                   MinRangeWidth="10"
                                                   Minimum="0"
                                                   UpperValue="{Binding Value.Maximum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                   UseLayoutRounding="False">
                                    <metro:RangeSlider.AutoToolTipLowerValueTemplate>
                                        <DataTemplate>
                                            <TextBlock HorizontalAlignment="Right" Text="{Binding StringFormat='{}{0:D}%'}"/>
                                        </DataTemplate>
                                    </metro:RangeSlider.AutoToolTipLowerValueTemplate>
                                    <metro:RangeSlider.AutoToolTipUpperValueTemplate>
                                        <DataTemplate>
                                            <TextBlock HorizontalAlignment="Right" Text="{Binding StringFormat='{}{0:D}%'}"/>
                                        </DataTemplate>
                                    </metro:RangeSlider.AutoToolTipUpperValueTemplate>
                                    <metro:RangeSlider.AutoToolTipRangeValuesTemplate>
                                        <DataTemplate DataType="mah:RangeSliderAutoTooltipValues">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding LowerValue, StringFormat='{}{0:D}%'}"/>
                                                <TextBlock Text=" - "/>
                                                <TextBlock Text="{Binding UpperValue, StringFormat='{}{0:D}%'}"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </metro:RangeSlider.AutoToolTipRangeValuesTemplate>
                                </metro:RangeSlider>
                            </Canvas>
                        </DockPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
    </Expander>
</UserControl>