<UserControl x:Class="MultiFunPlayer.OutputTarget.Views.ButtplugOutputTarget"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:common="clr-namespace:MultiFunPlayer.Common"
             xmlns:controls="clr-namespace:MultiFunPlayer.UI.Controls"
             xmlns:converters="clr-namespace:MultiFunPlayer.UI.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:s="https://github.com/canton7/Stylet"
             xmlns:ui="clr-namespace:MultiFunPlayer.UI"
             d:DesignHeight="450"
             d:DesignWidth="800"
             x:ClassModifier="internal"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="UpdateContextTemplates.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converters:ButtplugDeviceConnectedConverter x:Key="ButtplugDeviceConnectedConverter"/>
            <converters:MultiObjectEqualToBooleanConverter x:Key="MultiObjectEqualToBooleanConverter"/>
            <converters:ItemIndexInContainerConverter x:Key="ItemIndexInContainerConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <Expander Style="{StaticResource MaterialDesignToolBarExpander}"
              material:ExpanderAssist.HorizontalHeaderPadding="0 0 6 0"
              Background="{DynamicResource MaterialDesignToolBarBackground}"
              IsExpanded="{Binding DataContext.ContentVisible, RelativeSource={RelativeSource FindAncestor, AncestorLevel=2, AncestorType={x:Type UserControl}}}">
        <Expander.Header>
            <DockPanel Height="36" LastChildFill="False">
                <Button s:View.ActionTarget="{Binding DataContext.Parent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                        DockPanel.Dock="Left"
                        material:ButtonProgressAssist.IsIndeterminate="True"
                        material:ButtonProgressAssist.IsIndicatorVisible="{Binding IsConnectBusy}"
                        material:ButtonProgressAssist.Value="-1"
                        Command="{s:Action ToggleConnectAsync}"
                        CommandParameter="{Binding}"
                        IsEnabled="{Binding CanToggleConnect}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignProgressToolBarButton}" TargetType="{x:Type ButtonBase}">
                            <Setter Property="ToolTip" Value="Connect"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                    <Setter Property="ToolTip" Value="Disconnect"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <material:PackIcon Width="19" Height="19">
                        <material:PackIcon.Style>
                            <Style BasedOn="{StaticResource {x:Type material:PackIcon}}" TargetType="material:PackIcon">
                                <Setter Property="Kind" Value="Play"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                        <Setter Property="Kind" Value="Stop"/>
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                     From="0"
                                                                     To="1"
                                                                     Duration="0:0:0.8"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </material:PackIcon.Style>
                    </material:PackIcon>
                </Button>

                <ToggleButton DockPanel.Dock="Left"
                              Style="{StaticResource MaterialDesignToolBarToggleButton}"
                              IsChecked="{Binding AutoConnectEnabled}"
                              ToolTip="Auto-connect">
                    <material:PackIcon Width="20"
                                       Height="20"
                                       Kind="MotionPlayOutline"
                                       Opacity=".56"/>
                    <material:ToggleButtonAssist.OnContent>
                        <material:PackIcon Width="20"
                                           Height="20"
                                           Kind="MotionPlayOutline"/>
                    </material:ToggleButtonAssist.OnContent>
                </ToggleButton>

                <Button DockPanel.Dock="Left"
                        Style="{StaticResource MaterialDesignProgressToolBarButton}"
                        material:ButtonProgressAssist.IsIndeterminate="True"
                        material:ButtonProgressAssist.IsIndicatorVisible="{Binding IsScanBusy}"
                        material:ButtonProgressAssist.Value="-1"
                        Click="{s:Action ToggleScan}"
                        IsEnabled="{Binding CanScan}"
                        ToolTip="Toggle Scan">
                    <material:PackIcon Width="20"
                                       Height="20"
                                       Kind="MagnifyScan"/>
                </Button>

                <material:PopupBox DockPanel.Dock="Right"
                                   Style="{StaticResource MaterialDesignToolBarPopupBox}"
                                   PlacementMode="BottomAndAlignRightEdges"
                                   StaysOpen="True"
                                   ToolTip="Update settings">
                    <material:PopupBox.ToggleContent>
                        <material:PackIcon Width="20"
                                           Height="20"
                                           Kind="TimerCogOutline"/>
                    </material:PopupBox.ToggleContent>
                    <StackPanel Width="250" Margin="10 0 10 0">
                        <TextBlock FontWeight="Bold"
                                   Text="Fixed Update"
                                   Typography.Capitals="AllSmallCaps"/>
                        <ContentControl Content="{Binding UpdateContexts[FixedUpdate]}"/>

                        <Separator/>

                        <TextBlock FontWeight="Bold"
                                   Text="Polled Update"
                                   Typography.Capitals="AllSmallCaps"/>
                        <ContentControl Content="{Binding UpdateContexts[PolledUpdate]}"/>
                    </StackPanel>
                </material:PopupBox>
            </DockPanel>
        </Expander.Header>

        <StackPanel Margin="20">
            <DockPanel Margin="0 0 0 20" LastChildFill="True">
                <DockPanel DockPanel.Dock="Left"
                           IsEnabled="{Binding IsDisconnected}"
                           LastChildFill="False">
                    <controls:EndPointBox DockPanel.Dock="Left"
                                          Margin="0 0 20 0"
                                          VerticalAlignment="Center"
                                          EndPoint="{Binding Endpoint}"/>
                </DockPanel>
            </DockPanel>

            <TextBlock HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       FontWeight="Bold"
                       Text="Output Range"
                       Typography.Capitals="AllSmallCaps"/>
            <ItemsControl ItemsSource="{Binding AxisSettings}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Margin="0 0 -13 0"
                                     Columns="3"
                                     IsItemsHost="True"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <DockPanel Margin="0 0 20 1" LastChildFill="True">
                            <ToggleButton DockPanel.Dock="Left"
                                          Width="20"
                                          Height="14"
                                          Padding="0"
                                          VerticalAlignment="Center"
                                          IsChecked="{Binding Value.Enabled}">
                                <ToggleButton.Resources>
                                    <Style BasedOn="{StaticResource MaterialDesignPaperButton}" TargetType="{x:Type ToggleButton}">
                                        <Setter Property="material:ElevationAssist.Elevation" Value="Dp0"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                                <Setter Property="material:RippleAssist.Feedback" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Resources>

                                <TextBlock FontSize="10"
                                           FontWeight="Bold"
                                           Text="{Binding Key}"/>
                            </ToggleButton>

                            <Canvas DockPanel.Dock="Right" HorizontalAlignment="Stretch">
                                <metro:RangeSlider Style="{StaticResource MaterialDesignCompactRangeSlider}"
                                                   Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type Canvas}}}"
                                                   AutoToolTipPlacement="TopLeft"
                                                   IsEnabled="{Binding Value.Enabled}"
                                                   LowerValue="{Binding Value.Minimum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                   Maximum="100"
                                                   MinRange="1"
                                                   MinRangeWidth="10"
                                                   Minimum="0"
                                                   UpperValue="{Binding Value.Maximum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                   UseLayoutRounding="False">
                                    <metro:RangeSlider.AutoToolTipLowerValueTemplate>
                                        <DataTemplate>
                                            <TextBlock HorizontalAlignment="Right" Text="{Binding StringFormat='{}{0:D}%'}"/>
                                        </DataTemplate>
                                    </metro:RangeSlider.AutoToolTipLowerValueTemplate>
                                    <metro:RangeSlider.AutoToolTipUpperValueTemplate>
                                        <DataTemplate>
                                            <TextBlock HorizontalAlignment="Right" Text="{Binding StringFormat='{}{0:D}%'}"/>
                                        </DataTemplate>
                                    </metro:RangeSlider.AutoToolTipUpperValueTemplate>
                                    <metro:RangeSlider.AutoToolTipRangeValuesTemplate>
                                        <DataTemplate DataType="mah:RangeSliderAutoTooltipValues">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding LowerValue, StringFormat='{}{0:D}%'}"/>
                                                <TextBlock Text=" - "/>
                                                <TextBlock Text="{Binding UpperValue, StringFormat='{}{0:D}%'}"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </metro:RangeSlider.AutoToolTipRangeValuesTemplate>
                                </metro:RangeSlider>
                            </Canvas>
                        </DockPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <material:Card Margin="0 20 0 0" material:ShadowAssist.ShadowDepth="Depth1">
                <Expander material:ExpanderAssist.HorizontalHeaderPadding="24 6 6 6">
                    <Expander.Header>
                        <TextBlock FontSize="14"
                                   FontWeight="Bold"
                                   Text="Device map"
                                   Typography.Capitals="AllSmallCaps"/>
                    </Expander.Header>
                    <StackPanel Margin="10 0 10 10">
                        <ListBox DockPanel.Dock="Top"
                                 ItemsSource="{Binding DeviceSettings}"
                                 MaxHeight="150"
                                 Background="{DynamicResource MaterialDesignPaper}"
                                 BorderBrush="Transparent"
                                 ScrollViewer.CanContentScroll="False"
                                 ScrollViewer.VerticalScrollBarVisibility="Visible">
                            <ListBox.Resources>
                                <Style x:Key="ContainerStyle" TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListBoxItem">
                                                <material:Card Name="Container"
                                                               Margin="8 8 8 0"
                                                               material:ShadowAssist.ShadowDepth="Depth1"
                                                               Foreground="{DynamicResource MaterialDesignBody}">
                                                    <ContentPresenter/>
                                                </material:Card>

                                                <ControlTemplate.Triggers>
                                                    <DataTrigger Value="True">
                                                        <DataTrigger.Binding>
                                                            <MultiBinding Converter="{StaticResource MultiObjectEqualToBooleanConverter}">
                                                                <MultiBinding.Bindings>
                                                                    <Binding Converter="{StaticResource ItemIndexInContainerConverter}" RelativeSource="{RelativeSource Self}"/>
                                                                    <Binding Converter="{StaticResource MathAddConverter}"
                                                                             ConverterParameter="-1"
                                                                             Path="DataContext.DeviceSettings.Count"
                                                                             RelativeSource="{RelativeSource FindAncestor,
                                                                                                             AncestorType={x:Type UserControl}}"/>
                                                                </MultiBinding.Bindings>
                                                            </MultiBinding>
                                                        </DataTrigger.Binding>

                                                        <DataTrigger.Setters>
                                                            <Setter TargetName="Container" Property="Margin" Value="8 8 8 8"/>
                                                        </DataTrigger.Setters>
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>

                                <Style TargetType="ListBox">
                                    <Setter Property="ItemContainerStyle" Value="{StaticResource ContainerStyle}"/>
                                </Style>
                            </ListBox.Resources>

                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Border>
                                        <DockPanel LastChildFill="False">
                                            <material:ColorZone DockPanel.Dock="Left"
                                                                Width="28"
                                                                Height="24"
                                                                Padding="5 3 5 3"
                                                                HorizontalAlignment="Stretch"
                                                                VerticalAlignment="Stretch"
                                                                HorizontalContentAlignment="Center"
                                                                VerticalContentAlignment="Center"
                                                                CornerRadius="4 0 0 4">

                                                <material:ColorZone.Resources>
                                                    <Style TargetType="{x:Type material:ColorZone}">
                                                        <Setter Property="Background" Value="{DynamicResource MaterialDesignLightErrorBrush}"/>
                                                        <Setter Property="Content">
                                                            <Setter.Value>
                                                                <material:PackIcon Kind="PowerPlugOff"/>
                                                            </Setter.Value>
                                                        </Setter>

                                                        <Style.Triggers>
                                                            <DataTrigger Value="True">
                                                                <DataTrigger.Binding>
                                                                    <MultiBinding Converter="{StaticResource ButtplugDeviceConnectedConverter}">
                                                                        <Binding Path=""/>
                                                                        <Binding Path="DataContext.AvailableDevices" RelativeSource="{RelativeSource AncestorType={x:Type UserControl}}"/>
                                                                    </MultiBinding>
                                                                </DataTrigger.Binding>
                                                                <DataTrigger.Setters>
                                                                    <Setter Property="Background" Value="{DynamicResource MaterialDesignLightSuccessBrush}"/>
                                                                    <Setter Property="Content">
                                                                        <Setter.Value>
                                                                            <material:PackIcon Kind="PowerPlug"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </DataTrigger.Setters>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </material:ColorZone.Resources>
                                            </material:ColorZone>

                                            <StackPanel DockPanel.Dock="Left"
                                                        Margin="10 0 0 0"
                                                        Orientation="Horizontal"
                                                        Typography.Capitals="SmallCaps">
                                                <TextBlock VerticalAlignment="Center"
                                                           FontWeight="Bold"
                                                           Text="{Binding SourceAxis}"/>
                                                <material:PackIcon Margin="10 0 10 0"
                                                                   VerticalAlignment="Center"
                                                                   Kind="TransferRight"/>

                                                <StackPanel Height="24" Orientation="Vertical">
                                                    <StackPanel Margin="0 1 0 0" Orientation="Horizontal">
                                                        <TextBlock Width="55"
                                                                   FontSize="11"
                                                                   FontWeight="Bold"
                                                                   Text="Device:"
                                                                   Typography.Capitals="Normal"/>
                                                        <TextBlock FontSize="11" Text="{Binding DeviceName}"/>
                                                        <TextBlock FontSize="11" Text="{Binding DeviceIndex, StringFormat=/{0}}"/>
                                                    </StackPanel>

                                                    <StackPanel Margin="0 -3 0 0" Orientation="Horizontal">
                                                        <TextBlock Width="55"
                                                                   FontSize="11"
                                                                   FontWeight="Bold"
                                                                   Text="Actuator:"
                                                                   Typography.Capitals="Normal"/>
                                                        <TextBlock FontSize="11" Text="{Binding ActuatorType}"/>
                                                        <TextBlock FontSize="11" Text="{Binding ActuatorIndex, StringFormat=/{0}}"/>
                                                    </StackPanel>
                                                </StackPanel>
                                            </StackPanel>

                                            <Button DockPanel.Dock="Right"
                                                    Style="{StaticResource MaterialDesignFlatButton}"
                                                    Width="18"
                                                    Height="18"
                                                    Margin="0 0 3 0"
                                                    Padding="0"
                                                    material:RippleAssist.Feedback="{DynamicResource MaterialDesignErrorBrush}"
                                                    Click="{s:Action OnSettingsDelete}"
                                                    Foreground="{DynamicResource MaterialDesignErrorBrush}"
                                                    ToolTip="Remove">
                                                <material:PackIcon Width="16"
                                                                   Height="16"
                                                                   Kind="Delete"/>
                                            </Button>

                                            <ComboBox DockPanel.Dock="Right"
                                                      ItemsSource="{Binding Source={ui:EnumBindingSource {x:Type common:DeviceAxisUpdateType}}}"
                                                      SelectedItem="{Binding UpdateType}"
                                                      Width="90"
                                                      Margin="0 3 10 0"
                                                      Padding="0"
                                                      VerticalAlignment="Center"
                                                      material:TextFieldAssist.DecorationVisibility="Hidden"
                                                      FontSize="12"/>

                                            <TextBlock DockPanel.Dock="Right"
                                                       Margin="0 0 5 0"
                                                       VerticalAlignment="Center"
                                                       FontSize="12"
                                                       FontWeight="Bold"
                                                       Text="Update:"/>
                                        </DockPanel>
                                    </Border>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>

                        <StackPanel Margin="0 0 0 10" Orientation="Horizontal">
                            <ComboBox ItemsSource="{Binding Source={x:Static common:DeviceAxis.All}}"
                                      SelectedItem="{Binding SelectedDeviceAxis}"
                                      Width="50"
                                      Margin="5 0 10 0"
                                      HorizontalAlignment="Center"
                                      material:HintAssist.HelperText="Axes"
                                      material:TextFieldAssist.HasClearButton="True"/>

                            <ComboBox ItemsSource="{Binding AvailableDevices}"
                                      SelectedItem="{Binding SelectedDevice}"
                                      Width="215"
                                      Margin="0 0 10 0"
                                      material:HintAssist.HelperText="Connected devices"
                                      material:TextFieldAssist.HasClearButton="True"
                                      IsEnabled="{Binding AvailableDevices.Count, Converter={StaticResource NotZeroConverter}}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Name}"/>
                                            <TextBlock Text="{Binding Index, StringFormat=[{0}]}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>

                            <ComboBox ItemsSource="{Binding AvailableActuatorTypes}"
                                      SelectedItem="{Binding SelectedActuatorType}"
                                      Width="130"
                                      Margin="0 0 10 0"
                                      material:HintAssist.HelperText="Actuator types"
                                      material:TextFieldAssist.HasClearButton="True"
                                      IsEnabled="{Binding SelectedDevice, Converter={StaticResource InvertedNullableToBooleanConverter}}"/>

                            <ComboBox ItemsSource="{Binding AvailableActuatorIndices}"
                                      SelectedItem="{Binding SelectedActuatorIndex}"
                                      Width="50"
                                      Margin="0 0 10 0"
                                      material:HintAssist.HelperText="Indices"
                                      material:TextFieldAssist.HasClearButton="True"
                                      IsEnabled="{Binding SelectedActuatorType, Converter={StaticResource InvertedNullableToBooleanConverter}}"/>

                            <Button Style="{StaticResource MaterialDesignFlatButton}"
                                    Width="24"
                                    Height="24"
                                    Padding="0"
                                    material:RippleAssist.Feedback="{DynamicResource MaterialDesignSuccessBrush}"
                                    Click="{s:Action OnSettingsAdd}"
                                    Foreground="{DynamicResource MaterialDesignSuccessBrush}"
                                    IsEnabled="{Binding CanAddSelected}"
                                    ToolTip="Add">
                                <material:PackIcon Kind="Plus"/>
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </Expander>
            </material:Card>
        </StackPanel>
    </Expander>
</UserControl>