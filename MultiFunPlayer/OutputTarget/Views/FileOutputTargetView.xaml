<UserControl x:Class="MultiFunPlayer.OutputTarget.Views.FileOutputTargetView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:s="https://github.com/canton7/Stylet"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ui="clr-namespace:MultiFunPlayer.UI"
             xmlns:common="clr-namespace:MultiFunPlayer.Common"
             xmlns:converters="clr-namespace:MultiFunPlayer.UI.Converters"
             xmlns:behaviours="clr-namespace:MultiFunPlayer.UI.Behaviours"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <converters:MsToHzConverter x:Key="MsToHzConverter"/>
        <converters:FileSystemInfoToStringConverter x:Key="FileSystemInfoToStringConverter"/>
    </UserControl.Resources>
    <Expander material:ExpanderAssist.HorizontalHeaderPadding="0 0 6 0"
              Style="{StaticResource MaterialDesignToolBarExpander}"
              Background="{StaticResource MaterialDesignToolBarBackground}"
              IsExpanded="{Binding DataContext.ContentVisible, RelativeSource={RelativeSource FindAncestor, AncestorLevel=2, AncestorType={x:Type UserControl}}}">
        <Expander.Header>
            <StackPanel Orientation="Horizontal"
                        Height="35">
                <Button DockPanel.Dock="Left"
                        Command="{s:Action ToggleConnectAsync}"
                        CommandParameter="{Binding}"
                        s:View.ActionTarget="{Binding DataContext.Parent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                        IsEnabled="{Binding CanToggleConnect}"                                          
                        ToolTipService.InitialShowDelay="0"
                        ToolTipService.Placement="Top"
                        material:ButtonProgressAssist.IsIndicatorVisible="{Binding IsConnectBusy}"
                        material:ButtonProgressAssist.Value="-1"
                        material:ButtonProgressAssist.IsIndeterminate="True">
                    <Button.Style>
                        <Style TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource MaterialDesignProgressToolBarButton}">
                            <Setter Property="ToolTip" Value="Connect" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                    <Setter Property="ToolTip" Value="Disconnect" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <material:PackIcon Width="19" Height="19">
                        <material:PackIcon.Style>
                            <Style TargetType="material:PackIcon" BasedOn="{StaticResource {x:Type material:PackIcon}}">
                                <Setter Property="Kind" Value="Play" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                        <Setter Property="Kind" Value="Stop" />
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.8" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </material:PackIcon.Style>
                    </material:PackIcon>
                </Button>
            </StackPanel>
        </Expander.Header>

        <StackPanel Margin="20">
            <StackPanel Margin="0 0 0 20">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type StackPanel}">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Status}" Value="Disconnected">
                                <Setter Property="IsEnabled" Value="True" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>

                <DockPanel LastChildFill="True">
                    <TextBlock Text="Output directory:"
                               DockPanel.Dock="Left"
                               Margin="0 0 10 0"
                               VerticalAlignment="Center"/>
                    
                    <Button Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                            Click="{s:Action OnSetOutputDirectory}"
                            DockPanel.Dock="Right"
                            ToolTip="Set output directory" 
                            ToolTipService.InitialShowDelay="0" 
                            ToolTipService.Placement="Top" 
                            Width="24"
                            Height="24">
                        <material:PackIcon Kind="Folder"/>
                    </Button>

                    <TextBox Text="{Binding OutputDirectory, Converter={StaticResource FileSystemInfoToStringConverter}}"
                             DockPanel.Dock="Left"
                             Margin="0 0 10 0"
                             VerticalAlignment="Center"/>
                </DockPanel>

                <DockPanel>
                    <DockPanel LastChildFill="False"
                           Margin="0 10 0 0">
                        <TextBlock Text="Output format:"
                                   DockPanel.Dock="Left"
                                   Margin="0 0 10 0"
                                   VerticalAlignment="Center"/>

                        <ComboBox ItemsSource="{Binding Source={ui:EnumBindingSource {x:Type common:ScriptType}}}"
                                  SelectedItem="{Binding ScriptType}"
                                  DockPanel.Dock="Left"
                                  Width="150"/>
                    </DockPanel>

                    <DockPanel Margin="0 10 0 0" 
                               LastChildFill="False">
                        <StackPanel DockPanel.Dock="Right" 
                                    Orientation="Horizontal" 
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center">
                                    <TextBlock VerticalAlignment="Center" Text="Update rate:" Margin="0 0 10 0"/>
                                    <Slider Value="{Binding UpdateInterval, Mode=TwoWay}"
                                    Style="{StaticResource MaterialDesignReversedSlider}"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Top"
                                    Margin="0 0 10 0"
                                    Width="100"
                                    Minimum="{Binding MinimumUpdateInterval}" 
                                    Maximum="{Binding MaximumUpdateInterval}"
                                    Ticks="{Binding UpdateIntervalTicks}" 
                                    IsDirectionReversed="True"
                                    IsSnapToTickEnabled="True" 
                                    Orientation="Horizontal"
                                    material:SliderAssist.OnlyShowFocusVisualWhileDragging="True"/>
                            <TextBlock VerticalAlignment="Center" 
                                       HorizontalAlignment="Right" 
                                       Margin="0 0 5 0"
                                       TextAlignment="Right"
                                       Width="40"
                                       Text="{Binding UpdateInterval, Converter={StaticResource MsToHzConverter}, StringFormat={}{0} hz}"/>

                            <material:PopupBox PlacementMode="TopAndAlignRightEdges"
                                               PopupMode="Click">
                                <StackPanel Margin="10">
                                    <DockPanel Width="100">
                                        <TextBlock DockPanel.Dock="Left"
                                                   Text="Average:"/>
                                        <TextBlock DockPanel.Dock="Right" 
                                                   Text="{Binding AverageUpdateRate, StringFormat={}{0} hz}"
                                                   TextAlignment="Right"/>
                                    </DockPanel>

                                    <DockPanel Width="100">
                                        <TextBlock DockPanel.Dock="Left"
                                                   Text="Jitter:"/>
                                        <TextBlock DockPanel.Dock="Right" 
                                                   Text="{Binding UpdateRateJitter, StringFormat={}{0} hz}"
                                                   TextAlignment="Right"/>
                                    </DockPanel>

                                    <DockPanel Width="100">
                                        <TextBlock DockPanel.Dock="Left"
                                                   Text="Precise:"/>
                                        <ToggleButton DockPanel.Dock="Left"
                                                      IsChecked="{Binding UsePreciseSleep}"
                                                      Style="{StaticResource MaterialDesignSwitchToggleButton}"/>
                                    </DockPanel>
                                </StackPanel>

                                <material:PopupBox.ToggleContent>
                                    <material:ColorZone VerticalAlignment="Center"
                                                        CornerRadius="7"
                                                        Mode="PrimaryLight"
                                                        Width="14"
                                                        Height="14">
                                        <material:PackIcon Kind="Help"
                                                           Width="10"
                                                           Height="10"
                                                           HorizontalAlignment="Center"
                                                           VerticalAlignment="Center"/>
                                    </material:ColorZone>
                                </material:PopupBox.ToggleContent>
                            </material:PopupBox>
                        </StackPanel>
                    </DockPanel>
                </DockPanel>

                <DockPanel Margin="0 10 0 0"
                           LastChildFill="True">
                    <TextBlock Text="Enabled axes:"
                               DockPanel.Dock="Left"
                               Margin="0 0 10 0"
                               VerticalAlignment="Center"/>

                    <material:ColorZone material:ShadowAssist.ShadowDepth="Depth1">
                        <ListBox ItemsSource="{Binding Source={x:Static common:DeviceAxis.All}}"
                                 ItemContainerStyle="{StaticResource MaterialDesignToolToggleListBoxItem}"
                                 behaviours:ListBoxAssist.CanHorizontalScroll="True"
                                 behaviours:ListBoxAssist.SelectedItems="{Binding EnabledAxes}"
                                 material:ListBoxAssist.IsToggle="True"
                                 material:ThemeAssist.Theme="Light"
                                 ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                 ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                 SelectionMode="Multiple"
                                 DockPanel.Dock="Left">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                        </ListBox>
                    </material:ColorZone>
                </DockPanel>
            </StackPanel>

            <TextBlock Text="Output Range"
                       Typography.Capitals="AllSmallCaps"
                       FontWeight="Bold"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Left"/>
            <ItemsControl ItemsSource="{Binding AxisSettings}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="3" Rows="3" IsItemsHost="True" Margin="0 0 -13 0"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <DockPanel LastChildFill="True">
                            <TextBlock DockPanel.Dock="Left" 
                                       VerticalAlignment="Center" 
                                       Text="{Binding Key}"
                                       Width="16"/>

                            <Canvas DockPanel.Dock="Right" 
                                    HorizontalAlignment="Stretch"
                                    Margin="0 0 20 0">
                                <metro:RangeSlider Style="{StaticResource MaterialDesignCompactRangeSlider}" 
                                                   Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type Canvas}}}"
                                                   Minimum="0" 
                                                   Maximum="100" 
                                                   MinRangeWidth="10" 
                                                   MinRange="1"
                                                   AutoToolTipPlacement="TopLeft" 
                                                   UseLayoutRounding="False"
                                                   LowerValue="{Binding Value.Minimum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                   UpperValue="{Binding Value.Maximum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <metro:RangeSlider.AutoToolTipLowerValueTemplate>
                                        <DataTemplate>
                                            <TextBlock HorizontalAlignment="Right" Text="{Binding StringFormat='{}{0:D}%'}" />
                                        </DataTemplate>
                                    </metro:RangeSlider.AutoToolTipLowerValueTemplate>
                                    <metro:RangeSlider.AutoToolTipUpperValueTemplate>
                                        <DataTemplate>
                                            <TextBlock HorizontalAlignment="Right" Text="{Binding StringFormat='{}{0:D}%'}" />
                                        </DataTemplate>
                                    </metro:RangeSlider.AutoToolTipUpperValueTemplate>
                                    <metro:RangeSlider.AutoToolTipRangeValuesTemplate>
                                        <DataTemplate DataType="mah:RangeSliderAutoTooltipValues">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding LowerValue, StringFormat='{}{0:D}%'}" />
                                                <TextBlock Text=" - " />
                                                <TextBlock Text="{Binding UpperValue, StringFormat='{}{0:D}%'}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </metro:RangeSlider.AutoToolTipRangeValuesTemplate>
                                </metro:RangeSlider>
                            </Canvas>
                        </DockPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
    </Expander>
</UserControl>