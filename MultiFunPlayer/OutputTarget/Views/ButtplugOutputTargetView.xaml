<UserControl x:Class="MultiFunPlayer.OutputTarget.Views.ButtplugOutputTargetView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:s="https://github.com/canton7/Stylet"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:common="clr-namespace:MultiFunPlayer.Common" 
             xmlns:converters="clr-namespace:MultiFunPlayer.UI.Converters"
             xmlns:controls="clr-namespace:MultiFunPlayer.UI.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             x:ClassModifier="internal">
    <UserControl.Resources>
        <converters:MsToHzConverter x:Key="MsToHzConverter"/>
        <converters:ButtplugDeviceConnectedConverter x:Key="ButtplugDeviceConnectedConverter"/>
    </UserControl.Resources>
    <Expander material:ExpanderAssist.HorizontalHeaderPadding="0 0 6 0"
              Style="{StaticResource MaterialDesignToolBarExpander}"
              Background="{DynamicResource MaterialDesignToolBarBackground}"
              IsExpanded="{Binding DataContext.ContentVisible, RelativeSource={RelativeSource FindAncestor, AncestorLevel=2, AncestorType={x:Type UserControl}}}">
        <Expander.Header>
            <StackPanel Orientation="Horizontal"
                        Height="36">
                <Button DockPanel.Dock="Left"
                        Command="{s:Action ToggleConnectAsync}"
                        CommandParameter="{Binding}"
                        s:View.ActionTarget="{Binding DataContext.Parent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                        IsEnabled="{Binding CanToggleConnect}"
                        material:ButtonProgressAssist.IsIndicatorVisible="{Binding IsConnectBusy}"
                        material:ButtonProgressAssist.Value="-1"
                        material:ButtonProgressAssist.IsIndeterminate="True">
                    <Button.Style>
                        <Style TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource MaterialDesignProgressToolBarButton}">
                            <Setter Property="ToolTip" Value="Connect" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                    <Setter Property="ToolTip" Value="Disconnect" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <material:PackIcon Width="19" Height="19">
                        <material:PackIcon.Style>
                            <Style TargetType="material:PackIcon" BasedOn="{StaticResource {x:Type material:PackIcon}}">
                                <Setter Property="Kind" Value="Play" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                        <Setter Property="Kind" Value="Stop" />
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.8" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </material:PackIcon.Style>
                    </material:PackIcon>
                </Button>

                <ToggleButton DockPanel.Dock="Left"
                              IsChecked="{Binding AutoConnectEnabled}"           
                              Style="{StaticResource MaterialDesignToolBarToggleButton}"
                              ToolTip="Auto-connect">
                    <material:PackIcon Kind="MotionPlayOutline" Opacity=".56" Width="20" Height="20"/>
                    <material:ToggleButtonAssist.OnContent>
                        <material:PackIcon Kind="MotionPlayOutline" Width="20" Height="20"/>
                    </material:ToggleButtonAssist.OnContent>
                </ToggleButton>

                <Button DockPanel.Dock="Left"
                        IsEnabled="{Binding CanScan}"
                        Style="{StaticResource MaterialDesignProgressToolBarButton}"
                        Click="{s:Action ToggleScan}"
                        ToolTip="Toggle Scan"
                        material:ButtonProgressAssist.IsIndicatorVisible="{Binding IsScanBusy}"
                        material:ButtonProgressAssist.Value="-1"
                        material:ButtonProgressAssist.IsIndeterminate="True">
                    <material:PackIcon Width="20" Height="20" Kind="MagnifyScan"/>
                </Button>
            </StackPanel>
        </Expander.Header>

        <StackPanel Margin="20">
            <DockPanel LastChildFill="True" Margin="0 0 0 20">
                <DockPanel DockPanel.Dock="Left"
                               LastChildFill="False">
                    <DockPanel.Resources>
                        <Style TargetType="{x:Type DockPanel}">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Status}" Value="Disconnected">
                                    <Setter Property="IsEnabled" Value="True" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DockPanel.Resources>
                    <controls:EndPointBox EndPoint="{Binding Endpoint}"
                                          DockPanel.Dock="Left"
                                          Margin="0 0 20 0"
                                          VerticalAlignment="Center"/>
                </DockPanel>

                <StackPanel DockPanel.Dock="Right" 
                            Orientation="Horizontal" 
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center">
                    <TextBlock VerticalAlignment="Center" Text="Update rate:" Margin="0 0 10 0"/>
                    <Slider Value="{Binding UpdateInterval, Mode=TwoWay}"
                            Style="{StaticResource MaterialDesignReversedSlider}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top"
                            Margin="0 0 10 0"
                            Width="100"
                            Minimum="{Binding MinimumUpdateInterval}" 
                            Maximum="{Binding MaximumUpdateInterval}"
                            Ticks="{Binding UpdateIntervalTicks}" 
                            IsDirectionReversed="True"
                            IsSnapToTickEnabled="True"
                            Orientation="Horizontal"
                            material:SliderAssist.OnlyShowFocusVisualWhileDragging="True"/>
                    <TextBlock VerticalAlignment="Center" 
                               HorizontalAlignment="Right" 
                               Margin="0 0 5 0"
                               TextAlignment="Right"
                               Width="40"
                               Text="{Binding UpdateInterval, Converter={StaticResource MsToHzConverter}, StringFormat={}{0} hz}"/>

                    <material:PopupBox PlacementMode="TopAndAlignRightEdges"
                                       PopupMode="Click"
                                       StaysOpen="True"
                                       ToolTip="Update settings">
                        <StackPanel Margin="10">
                            <DockPanel Width="100" HorizontalAlignment="Left">
                                <TextBlock DockPanel.Dock="Left"
                                           Text="Average:"/>
                                <TextBlock DockPanel.Dock="Right" 
                                           Text="{Binding AverageUpdateRate, StringFormat={}{0} hz}"
                                           TextAlignment="Right"/>
                            </DockPanel>

                            <DockPanel Width="100" HorizontalAlignment="Left">
                                <TextBlock DockPanel.Dock="Left"
                                           Text="Jitter:"/>
                                <TextBlock DockPanel.Dock="Right" 
                                           Text="{Binding UpdateRateJitter, StringFormat={}{0} hz}"
                                           TextAlignment="Right"/>
                            </DockPanel>
                        </StackPanel>

                        <material:PopupBox.ToggleContent>
                            <material:ColorZone VerticalAlignment="Center"
                                                CornerRadius="10"
                                                Mode="PrimaryLight"
                                                Width="20"
                                                Height="20"
                                                material:ShadowAssist.ShadowDepth="Depth2">
                                <material:PackIcon Kind="Cog"
                                                   Width="16"
                                                   Height="16"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"/>
                            </material:ColorZone>
                        </material:PopupBox.ToggleContent>
                    </material:PopupBox>
                </StackPanel>
            </DockPanel>

            <TextBlock Text="Output Range"
                       Typography.Capitals="AllSmallCaps"
                       FontWeight="Bold"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Left"/>
            <ItemsControl ItemsSource="{Binding AxisSettings}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="3" IsItemsHost="True" Margin="0 0 -13 0"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <DockPanel LastChildFill="True">
                            <TextBlock DockPanel.Dock="Left" 
                                       VerticalAlignment="Center" 
                                       Text="{Binding Key}"
                                       Width="16"/>

                            <Canvas DockPanel.Dock="Right" 
                                    HorizontalAlignment="Stretch"
                                    Margin="0 0 20 0">
                                <metro:RangeSlider Style="{StaticResource MaterialDesignCompactRangeSlider}" 
                                                   Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type Canvas}}}"
                                                   Minimum="0" 
                                                   Maximum="100" 
                                                   MinRangeWidth="10" 
                                                   MinRange="1"
                                                   AutoToolTipPlacement="TopLeft" 
                                                   UseLayoutRounding="False"
                                                   LowerValue="{Binding Value.Minimum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                   UpperValue="{Binding Value.Maximum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <metro:RangeSlider.AutoToolTipLowerValueTemplate>
                                        <DataTemplate>
                                            <TextBlock HorizontalAlignment="Right" Text="{Binding StringFormat='{}{0:D}%'}" />
                                        </DataTemplate>
                                    </metro:RangeSlider.AutoToolTipLowerValueTemplate>
                                    <metro:RangeSlider.AutoToolTipUpperValueTemplate>
                                        <DataTemplate>
                                            <TextBlock HorizontalAlignment="Right" Text="{Binding StringFormat='{}{0:D}%'}" />
                                        </DataTemplate>
                                    </metro:RangeSlider.AutoToolTipUpperValueTemplate>
                                    <metro:RangeSlider.AutoToolTipRangeValuesTemplate>
                                        <DataTemplate DataType="mah:RangeSliderAutoTooltipValues">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding LowerValue, StringFormat='{}{0:D}%'}" />
                                                <TextBlock Text=" - " />
                                                <TextBlock Text="{Binding UpperValue, StringFormat='{}{0:D}%'}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </metro:RangeSlider.AutoToolTipRangeValuesTemplate>
                                </metro:RangeSlider>
                            </Canvas>
                        </DockPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <material:Card material:ShadowAssist.ShadowDepth="Depth1" 
                               Margin="0 20 0 0">
                <Expander material:ExpanderAssist.HorizontalHeaderPadding="24 6 6 6">
                    <Expander.Header>
                        <TextBlock Text="Device map" 
                                       FontSize="14"
                                       FontWeight="Bold"
                                       Typography.Capitals="AllSmallCaps"/>
                    </Expander.Header>
                    <StackPanel Margin="10 0 10 10">
                        <ListView ItemsSource="{Binding DeviceSettings}"
                                      material:ListViewAssist.ListViewItemPadding="0"
                                      ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem" BasedOn="{StaticResource MaterialDesignGridViewItem}">
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="Height" Value="36"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.View>
                                <GridView AllowsColumnReorder="False">
                                    <GridView.ColumnHeaderContainerStyle>
                                        <Style TargetType="{x:Type GridViewColumnHeader}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                                        <TextBlock x:Name="ContentHeader" 
                                                                       Text="{TemplateBinding Content}"
                                                                       Padding="5 10 5 10"
                                                                       HorizontalAlignment="Left"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </GridView.ColumnHeaderContainerStyle>

                                    <GridViewColumn Header="Axis"
                                                    Width="60"
                                                    DisplayMemberBinding="{Binding SourceAxis}"/>
                                    <GridViewColumn Header="Device Name"
                                                    Width="225">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <material:Badged BadgePlacementMode="TopRight"
                                                                 Padding="0 0 10 0">
                                                    <material:Badged.Resources>
                                                        <Style TargetType="{x:Type material:Badged}">
                                                            <Setter Property="BadgeBackground">
                                                                <Setter.Value>
                                                                    <SolidColorBrush Color="{StaticResource MaterialDesignErrorColor}" Opacity="0.7"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="Badge">
                                                                <Setter.Value>
                                                                    <material:PackIcon Kind="PowerPlugOff" Width="12" Height="12"/>
                                                                </Setter.Value>
                                                            </Setter>

                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource ButtplugDeviceConnectedConverter}">
                                                                            <Binding Path=""/>
                                                                            <Binding Path="DataContext.AvailableDevices" RelativeSource="{RelativeSource AncestorType={x:Type UserControl}}"/>
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="BadgeBackground">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush Color="{StaticResource MaterialDesignSuccessColor}" Opacity="0.5"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="Badge">
                                                                        <Setter.Value>
                                                                            <material:PackIcon Kind="PowerPlug" Width="12" Height="12"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </material:Badged.Resources>

                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Text="{Binding DeviceName}"/>
                                                        <TextBlock Text="{Binding DeviceIndex, StringFormat=[{0}]}" />
                                                    </StackPanel>
                                                </material:Badged>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Message Type"
                                                    Width="140"
                                                    DisplayMemberBinding="{Binding ActuatorType}"/>
                                    <GridViewColumn Header="Index"
                                                    Width="50"
                                                    DisplayMemberBinding="{Binding ActuatorIndex}"/>

                                    <GridViewColumn Header=""
                                                        Width="50">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Style="{StaticResource MaterialDesignFlatButton}"
                                                        ToolTip="Remove"
                                                        material:RippleAssist.Feedback="{StaticResource MaterialDesignErrorBrush}"
                                                        Foreground="{StaticResource MaterialDesignErrorBrush}"
                                                        Height="24" 
                                                        Width="24" 
                                                        Padding="0"
                                                        Click="{s:Action OnSettingsDelete}" >
                                                    <material:PackIcon Kind="Delete"/>
                                                </Button>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>

                        <StackPanel Orientation="Horizontal"
                                    Margin="0 0 0 10">
                            <ComboBox Margin="5 0 10 0" 
                                      Width="50"
                                      material:TextFieldAssist.HasClearButton="True"
                                      material:HintAssist.HelperText="Axes"
                                      HorizontalAlignment="Center"
                                      ItemsSource="{Binding Source={x:Static common:DeviceAxis.All}}" 
                                      SelectedItem="{Binding SelectedDeviceAxis}"/>

                            <ComboBox Margin="0 0 10 0"
                                      Width="215"
                                      material:TextFieldAssist.HasClearButton="True"
                                      material:HintAssist.HelperText="Connected devices"
                                      ItemsSource="{Binding AvailableDevices}" 
                                      SelectedItem="{Binding SelectedDevice}"
                                      IsEnabled="{Binding AvailableDevices.Count, Converter={StaticResource NotZeroConverter}}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Name}"/>
                                            <TextBlock Text="{Binding Index, StringFormat=[{0}]}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>

                            <ComboBox Margin="0 0 10 0" 
                                      Width="130"
                                      material:TextFieldAssist.HasClearButton="True"
                                      material:HintAssist.HelperText="Message types"
                                      ItemsSource="{Binding AvailableActuatorTypes}" 
                                      SelectedItem="{Binding SelectedActuatorType}"
                                      IsEnabled="{Binding SelectedDevice, Converter={StaticResource notNullBooleanConverter}}"/>

                            <ComboBox Margin="0 0 10 0" 
                                      Width="50"
                                      material:TextFieldAssist.HasClearButton="True"
                                      material:HintAssist.HelperText="Indices"
                                      ItemsSource="{Binding AvailableActuatorIndices}" 
                                      SelectedItem="{Binding SelectedActuatorIndex}"
                                      IsEnabled="{Binding SelectedActuatorType, Converter={StaticResource notNullBooleanConverter}}"/>

                            <Button Style="{StaticResource MaterialDesignFlatButton}"
                                    ToolTip="Add"
                                    material:RippleAssist.Feedback="{StaticResource MaterialDesignSuccessBrush}"
                                    Foreground="{StaticResource MaterialDesignSuccessBrush}"
                                    Height="24" 
                                    Width="24" 
                                    Padding="0"
                                    Click="{s:Action OnSettingsAdd}"
                                    IsEnabled="{Binding CanAddSelected}">
                                <material:PackIcon Kind="Plus"/>
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </Expander>
            </material:Card>
        </StackPanel>
    </Expander>
</UserControl>